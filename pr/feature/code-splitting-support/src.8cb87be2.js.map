{"version":3,"sources":["../packages/render/types.ts","../packages/render/utils.ts","../packages/render/attributes.ts","../packages/render/jsx.ts","../packages/render/element.ts","../packages/render/hooks/useState.ts","../packages/render/hooks/useEffect.ts","../packages/render/context.ts","../packages/render/hooks/useContext.ts","../packages/render/hooks/index.ts","../packages/render/render.ts","../packages/render/index.ts","../packages/render/lazy.tsx","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/bundle-loader.js","../src/index.ts","../node_modules/parcel-bundler/src/builtins/loaders/browser/js-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","script","document","createElement","async","charset","src","onerror","onload","getElementsByTagName","appendChild"],"mappings":"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","file":"src.8cb87be2.js","sourceRoot":"../public","sourcesContent":["/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nexport const NODE_TYPE_FRAGMENT = \"#fragment\";\n\nexport type AnyFunc = (...args: any[]) => any;\n\nexport type Key = string | number | null;\n\nexport type NodeType<P = any> =\n  | {\n      [K in keyof JSX.IntrinsicElements]: P extends JSX.IntrinsicElements[K]\n        ? K\n        : never;\n    }[keyof JSX.IntrinsicElements]\n  | typeof NODE_TYPE_FRAGMENT\n  | FC<P>;\n\nexport type Node<P = any> = {\n  type: NodeType<P>;\n  props: P;\n  children?: Children;\n  key: Key;\n};\n\nexport type Children<P = any> = AnyNode<P>[];\n\nexport type AnyNode<P = any> = Node<P> | string;\n\nexport type FC<P = any> = (props: P) => Node<P>;\n\nexport interface HTMLElementMap extends HTMLElement {\n  [key: string]: any;\n}\n\nexport type Props = {\n  [key: string]: any;\n};\n\nexport type AnyCallback = (() => void) | void;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { Node } from \"./types\";\n\ntype MappedProps = {\n  [key: string]: string;\n};\n\nconst mappedProps: MappedProps = {\n  className: \"class\",\n  htmlFor: \"for\",\n};\n\nexport const propertyMap = (name: string) => {\n  if (mappedProps[name]) {\n    return mappedProps[name];\n  } else if (/^on/.test(name)) {\n    return name.toLowerCase();\n  }\n\n  return name;\n};\n\nexport const isNode = (node: any): node is Node =>\n  (node &&\n    typeof node === \"object\" &&\n    Object.prototype.hasOwnProperty.call(node, \"type\")) ||\n  false;\n\nexport const classnames = (...classNames: (string | undefined)[]): string =>\n  classNames.join(\" \");\n\ntype LooseRef<T = any> = {\n  current: T;\n};\n\nexport const looseRef = <T>(initial: T): LooseRef<T> => ({\n  current: initial,\n});\n\nexport type Deps = any[];\n\nexport const hasChanged = <T extends Deps = Deps>(deps: T, prevDeps?: T) =>\n  !prevDeps || deps.filter((d, i) => d !== prevDeps[i]).length > 0;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { AnyFunc, HTMLElementMap, Props } from \"./types\";\nimport { propertyMap } from \"./utils\";\n\nexport const setAttribute = (\n  element: HTMLElementMap,\n  name: string,\n  value: string | AnyFunc\n) => {\n  const propertyName = propertyMap(name);\n\n  if (typeof value === \"function\") {\n    element[propertyName] = value;\n  } else {\n    if (value) {\n      element.setAttribute(propertyName, value);\n    } else {\n      element.removeAttribute(propertyName);\n    }\n    element[propertyName] = value;\n  }\n};\n\nexport const setAttributes = (element: HTMLElement, props: Props) =>\n  Object.keys(props || {}).forEach((name) =>\n    setAttribute(element, name, props[name])\n  );\n\nexport const removeAttribute = (element: HTMLElement, name: string) =>\n  element.removeAttribute(propertyMap(name));\n\nexport const updateAttribute = (\n  element: HTMLElement,\n  name: string,\n  value: string,\n  prevValue: string\n) => {\n  if (value !== prevValue) {\n    if (value === undefined) {\n      removeAttribute(element, name);\n    } else if (!prevValue || value !== prevValue) {\n      setAttribute(element, name, value);\n    }\n  }\n};\n\nexport const updateAttributes = (\n  element: HTMLElement,\n  props: Props,\n  prevProps: Props = {}\n) =>\n  Object.keys({ ...props, ...prevProps }).forEach((name) =>\n    updateAttribute(element, name, props[name], prevProps[name])\n  );\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport {\n  Children,\n  Key,\n  Node,\n  NODE_TYPE_FRAGMENT,\n  NodeType,\n  Props,\n} from \"./types\";\n\nconst flattenChildren = (children: Children | Children[]): Children =>\n  (children.length === 1 && Array.isArray(children[0]) && children[0]\n    ? children[0]\n    : children) as Children;\n\nexport const jsxFrag = ({\n  children,\n  ...props\n}: {\n  children: Children;\n}): Node & { key: Key } => ({\n  type: NODE_TYPE_FRAGMENT,\n  props,\n  children: Array.isArray(children) ? children : [children],\n  key: null,\n});\n\nexport const jsx = (\n  type: NodeType,\n  props: Props = {},\n  ...children: Children | Children[]\n): Node => {\n  const { key, ...rest } = props || {};\n\n  return type === jsxFrag\n    ? type({\n        ...rest,\n        children: flattenChildren(children),\n        key,\n      })\n    : {\n        type,\n        props: rest,\n        children: flattenChildren(children),\n        key: key || null,\n      };\n};\n\n(global as any).jsxFrag = jsxFrag;\n(global as any).jsx = jsx;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport {\n  AnyNode,\n  Children,\n  Node,\n  NODE_TYPE_FRAGMENT,\n  NodeType,\n  Props,\n} from \"./types\";\nimport { isNode } from \"./utils\";\nimport { setAttributes, updateAttributes } from \"./attributes\";\nimport { jsx } from \"./jsx\";\n\nexport const createElement = (\n  type: NodeType,\n  props: Props = {},\n  children?: Children | Node\n): Node => {\n  if (Array.isArray(children)) {\n    return jsx(type, props, ...children);\n  } else if (children) {\n    return jsx(type, props, children);\n  } else {\n    return jsx(type, props);\n  }\n};\n\nconst createDocumentElement = (node: AnyNode): HTMLElement | Text => {\n  if (isNode(node) && typeof node.type === \"string\") {\n    const element = document.createElement(node.type);\n\n    setAttributes(element, node?.props);\n\n    node?.props?.ref?.(element);\n\n    return element;\n  }\n\n  return document.createTextNode(node.toString());\n};\n\nconst hasChanged = (node: AnyNode, prevNode: AnyNode) =>\n  typeof node !== typeof prevNode ||\n  (isNode(node) && node.type) !== (isNode(prevNode) && prevNode.type);\n\nconst updateChildren = (\n  element: HTMLElement,\n  children: Children = [],\n  prevChildren: Children = [],\n  index: number\n) => {\n  const nodeChildrenLength = children.length;\n  const prevNodeChildrenLength = prevChildren.length;\n  const nodes: Children = [];\n\n  for (\n    let childIndex = 0;\n    childIndex < nodeChildrenLength || childIndex < prevNodeChildrenLength;\n    childIndex++\n  ) {\n    const node = updateTree(\n      element.childNodes[index] as HTMLElement,\n      children[childIndex],\n      prevChildren[childIndex],\n      childIndex\n    );\n\n    if (node !== undefined) {\n      nodes.push(node);\n    }\n  }\n\n  return nodes;\n};\n\nconst flattenChildren = (children: Children = []): Children =>\n  children.reduce((children, child) => {\n    if (isNode(child) && child.type === NODE_TYPE_FRAGMENT) {\n      return [...children, ...flattenChildren(child.children)];\n    }\n    return [...children, child];\n  }, [] as Children);\n\nconst updateNode = (\n  element: HTMLElement,\n  node: AnyNode,\n  prevNode?: AnyNode,\n  index = 0\n): AnyNode | undefined =>\n  (isNode(node) && {\n    ...node,\n    children: updateChildren(\n      element,\n      flattenChildren(node.children),\n      (isNode(prevNode) && flattenChildren(prevNode?.children)) || undefined,\n      index\n    ),\n  }) ||\n  node;\n\nexport const updateTree = (\n  element: HTMLElement,\n  node: AnyNode,\n  prevNode?: AnyNode,\n  index = 0\n): AnyNode | undefined => {\n  if (isNode(node) && typeof node?.type === \"function\") {\n    // @TODO: process hooks - would add support for unmounting effects etc.\n    // activeHooks.beginCollect();\n\n    const componentNode = node.type({\n      ...node.props,\n      children: node.children?.length === 1 ? node.children[0] : node.children,\n    });\n\n    // const componentStates = activeHooks.collect();\n    // if (componentStates.length > 0) {\n    //   componentStates.byType<UseEffect>(useEffect).forEach((s) => s.callback());\n    //\n    //   console.log(\"----COLLECTED\", node.type.name, componentStates);\n    // }\n\n    const componentTree = updateTree(\n      element,\n      componentNode,\n      isNode(prevNode) ? prevNode?.children?.[0] : prevNode,\n      index\n    );\n\n    return {\n      ...node,\n      children: componentTree ? [componentTree] : [],\n    };\n  }\n\n  if (prevNode === undefined) {\n    element.appendChild(createDocumentElement(node));\n  } else if (node === undefined) {\n    // @TODO: unmount and mounted components...!\n    element.removeChild(element.childNodes[index]);\n    return undefined;\n  } else if (hasChanged(node, prevNode)) {\n    element.replaceChild(\n      createDocumentElement(node),\n      element.childNodes[index]\n    );\n\n    return updateNode(element, node, undefined, index);\n  } else if (isNode(node)) {\n    updateAttributes(\n      element.childNodes[index] as HTMLElement,\n      node.props,\n      isNode(prevNode) ? prevNode.props : undefined\n    );\n  } else if (element.childNodes[index].nodeValue !== node) {\n    element.childNodes[index].nodeValue = node.toString();\n  }\n\n  return updateNode(element, node, prevNode, index);\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport activeHooks, { HookImplementation } from \"./index\";\n\nconst HOOK_TYPE = \"useState\";\n\ntype UseState<S> = {\n  value: S;\n  setter: (newValue: S) => S;\n} & HookImplementation;\n\nexport const useState = <S = any>(initialState: S): [S, (newValue: S) => S] => {\n  const hook = activeHooks.getCurrent<UseState<S>>();\n\n  const currentState = hook.getValue();\n\n  const updatedState = hook.setValue({\n    type: HOOK_TYPE,\n    value: currentState?.value ?? initialState,\n    setter(newValue: S) {\n      if (updatedState.value !== newValue) {\n        hook.setValue({\n          ...updatedState,\n          value: newValue,\n        });\n        hook.options.render();\n      }\n      return newValue;\n    },\n  });\n\n  return [updatedState.value, updatedState.setter];\n};\n\nuseState.type = HOOK_TYPE;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport activeHooks, { HookImplementation } from \"./index\";\nimport { Deps, hasChanged } from \"../utils\";\nimport { AnyCallback } from \"../types\";\n\nconst HOOK_TYPE = \"useEffect\";\n\ntype UseEffectCallback = () => AnyCallback;\n\nexport type UseEffect = {\n  deps: Deps;\n  cleanup?: AnyCallback;\n} & HookImplementation;\n\nexport const useEffect = (callback: UseEffectCallback, deps: Deps): void => {\n  const hook = activeHooks.getCurrent<UseEffect>();\n\n  const currentState = hook.getValue();\n\n  const cleanup = () => {\n    if (hasChanged(deps, currentState?.deps)) {\n      currentState?.cleanup && currentState.cleanup();\n      return callback();\n    }\n\n    return currentState?.cleanup;\n  };\n\n  hook.setValue({\n    type: HOOK_TYPE,\n    deps,\n    cleanup: cleanup(),\n  });\n};\n\nuseEffect.type = HOOK_TYPE;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { Node } from \"packages/render\";\n\nimport { looseRef } from \"./utils\";\n\nexport const getValueSymbol = Symbol(\"getValueSymbol\");\n\nexport type Context<T = any> = {\n  [getValueSymbol]: () => T | undefined;\n  Provider: ({ value, children }: { value: T; children: Node }) => any;\n};\n\nexport const createContext = <T = any>(defaultValue?: T): Context<T> => {\n  const currentValue = looseRef(defaultValue);\n\n  return {\n    [getValueSymbol]: () => currentValue.current,\n    Provider: ({ value, children }) => {\n      if (currentValue.current !== value) {\n        currentValue.current = value;\n      }\n\n      return children;\n    },\n  };\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { Context, getValueSymbol } from \"../context\";\n\nconst HOOK_TYPE = \"useContext\";\n\nexport const useContext = <T = any>(context: Context<T>): T | undefined =>\n  context[getValueSymbol]();\n\nuseContext.type = HOOK_TYPE;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\ntype HookOptions = {\n  render: () => void;\n};\n\nexport type HookImplementation = {\n  id: number;\n  type: string;\n};\n\nclass State extends Array<HookImplementation> {\n  constructor(...items: HookImplementation[]) {\n    super(...items);\n\n    Object.setPrototypeOf(this, State.prototype);\n  }\n\n  byType<T extends HookImplementation>(\n    ...types: Omit<HookImplementation, \"id\">[]\n  ): T[] {\n    const filterType = types.map(({ type }) => type);\n    return this.filter(({ type }) => filterType.indexOf(type) !== -1) as T[];\n  }\n}\n\ntype Hook = {\n  index: number;\n  state: State;\n  options: HookOptions;\n};\n\nexport type HookID = number;\n\ntype Hooks = Hook[] & {\n  [key: number]: Hook;\n};\n\ntype HookContainer<T> = {\n  options: HookOptions;\n  getValue: () => T | undefined;\n  setValue: (value: Omit<T, \"id\">) => T;\n};\n\ntype HooksContainer = {\n  register: (options: HookOptions) => HookID;\n  setActive: (id: HookID) => void;\n  getActive: () => Hook;\n  getCurrent: <T = any>() => HookContainer<T>;\n  inspectActive: <T = any>() => HookContainer<T> | undefined;\n  beginCollect: () => void;\n  collect: () => State;\n};\n\nconst hook = (options: HookOptions): Hook => ({\n  index: 0,\n  state: new State(),\n  options,\n});\n\nconst ActiveHooks = (): HooksContainer => {\n  let activeId: HookID | undefined;\n  let hooks: Hooks = [];\n  let collectedHookStartIndex: number;\n\n  const getActiveHook = (activeId?: HookID): Hook => {\n    if (activeId === undefined) {\n      throw new TypeError(\"No active hooks\");\n    }\n\n    return hooks[activeId];\n  };\n\n  const getActiveHookContainer = (\n    activeId?: HookID,\n    activeIndex?: number\n  ): HookContainer<any> => {\n    const hook = getActiveHook(activeId);\n    const currentIndex = activeIndex ?? hook.index;\n    const hookState = hook.state[currentIndex];\n\n    return {\n      options: hook.options,\n      getValue: () => hookState,\n      setValue: (value: Omit<HookImplementation, \"id\">) => {\n        hook.state[currentIndex] = {\n          id: currentIndex,\n          ...value,\n        };\n        return value;\n      },\n    };\n  };\n\n  return {\n    register(options) {\n      hooks = [...hooks, hook(options)];\n      return hooks.length - 1;\n    },\n    setActive: (id) => {\n      activeId = id;\n      hooks[activeId].index = 0;\n    },\n    getActive() {\n      return getActiveHook(activeId);\n    },\n    getCurrent() {\n      const current = getActiveHookContainer(activeId);\n      this.getActive().index++;\n      return current;\n    },\n    inspectActive() {\n      return getActiveHookContainer(activeId, this.getActive().index - 1);\n    },\n    beginCollect() {\n      collectedHookStartIndex = this.getActive().index;\n    },\n    collect() {\n      const hook = this.getActive();\n      const currentIndex = hook.index;\n\n      if (currentIndex !== collectedHookStartIndex) {\n        return new State(\n          ...hook.state\n            .slice(collectedHookStartIndex, currentIndex)\n            .map((state) => ({ ...state }))\n        );\n      }\n\n      return new State();\n    },\n  };\n};\n\nexport default ActiveHooks();\n\nexport * from \"./useState\";\nexport * from \"./useEffect\";\nexport * from \"./useContext\";\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { AnyNode, FC } from \"./types\";\nimport { updateTree } from \"./element\";\nimport activeHooks, { HookID } from \"./hooks\";\n\ntype MxContainer = {\n  render: (component: FC) => (mountPoint: HTMLElement) => void;\n};\n\nconst MxFactory = (): MxContainer => {\n  let hookId: HookID;\n  let previousTree: AnyNode | undefined;\n  let renderTree: () => void;\n\n  return {\n    render: (component) => (mountPoint) => {\n      renderTree = () => {\n        activeHooks.setActive(hookId);\n\n        previousTree = updateTree(mountPoint, component({}), previousTree);\n      };\n\n      hookId = activeHooks.register({\n        render: renderTree,\n      });\n\n      return renderTree();\n    },\n  };\n};\n\nexport const Mx = MxFactory();\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nexport { Mx as default } from \"./render\";\n\nexport { Node, Children, FC, HTMLElementMap } from \"./types\";\n\nexport { classnames } from \"./utils\";\n\nexport { createElement } from \"./element\";\n\nexport { jsx, jsxFrag } from \"./jsx\";\n\nexport * from \"./hooks\";\n\nexport * from \"./context\";\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n\nimport { jsx } from \"./jsx\";\nimport { useEffect, useState } from \"./hooks\";\nimport { FC } from \"./types\";\n\ntype Module<T> = T;\n\ntype GetModule<T> = () => Promise<Module<T>>;\n\ntype ExportResolver<T> = (module: Module<T>) => FC;\n\nexport function lazy<T>(\n  getModule: GetModule<T>,\n  exportResolver?: ExportResolver<T>\n) {\n  return (props = {}) => {\n    const [component, setComponent] = useState<FC | undefined>(undefined);\n\n    useEffect(() => {\n      (async function () {\n        const module = (await getModule()) as Module<T> & { default: any };\n        const resolvedComponent = exportResolver\n          ? exportResolver(module)\n          : module.default;\n\n        if (!resolvedComponent) {\n          throw new TypeError(\"Unable to load component\");\n        }\n\n        setComponent(resolvedComponent);\n      })();\n    }, []);\n\n    // @TODO: currently need to be in placeholder element to proved a valid mount point. The tree update would need to support dynamic mounting\n    return <div data-placeholder>{component ? component(props) : \"\"}</div>;\n  };\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport Mx from \"packages/render\";\nimport { lazy } from \"packages/render/lazy\";\n\nconst App = lazy(\n  () => import(\"./App\"),\n  (module) => module.App\n);\n\nconst el = document.createElement(\"div\");\n\ndocument.body.append(el);\n\nMx.render(App)(el);\n","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}