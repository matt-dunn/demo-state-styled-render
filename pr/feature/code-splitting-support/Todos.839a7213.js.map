{"version":3,"sources":["../src/components/Todos/Todo.tsx","../src/components/Todos/Todos.tsx","../src/components/Todos/TodoInput.tsx","../src/components/Todos/TodoList.tsx","../src/components/Todos/index.ts","../src/containers/Todos.tsx"],"names":[],"mappings":"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","file":"Todos.839a7213.js","sourceRoot":"../public","sourcesContent":["/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n/** @jsxFrag jsxFrag **/\n\nimport { jsx, jsxFrag } from \"packages/render\";\nimport myStyled from \"packages/myStyled\";\n\nimport { TodoItem } from \"./types\";\nimport { Actions as TodoActions } from \"./duck\";\n\ntype TodoProps = {\n  todo: TodoItem;\n  deleteTodo: TodoActions[\"deleteTodo\"];\n  updateTodo: TodoActions[\"updateTodo\"];\n};\n\n// Quick fix to allow stylelint to do it's thing:\nconst styled = myStyled;\n\nconst Todo$ = styled(\"article\")`\n  display: flex;\n  align-items: flex-start;\n\n  label {\n    flex-grow: 1;\n    margin-right: 1rem;\n    word-break: break-word;\n    display: flex;\n    align-items: baseline;\n  }\n\n  del {\n    word-break: break-word;\n    display: flex;\n    align-items: baseline;\n  }\n\n  input[type=\"checkbox\"] {\n    margin: 0 0.5rem 0 0;\n  }\n`;\n\nexport const Todo = ({\n  todo: { id, text, complete },\n  deleteTodo,\n  updateTodo,\n}: TodoProps) => (\n  <Todo$>\n    <label\n      onClick={(e) => {\n        e.preventDefault();\n        updateTodo({ id, text, complete: !complete });\n      }}\n    >\n      {complete ? (\n        <del className=\"text-muted\">\n          <input type=\"checkbox\" checked={complete} />\n          {text}\n        </del>\n      ) : (\n        <>\n          <input type=\"checkbox\" checked={complete} />\n          {text}\n        </>\n      )}\n    </label>\n    <button\n      className=\"btn btn-sm btn-outline-secondary\"\n      onClick={(e) => {\n        e.preventDefault();\n        deleteTodo(id);\n      }}\n    >\n      Delete\n    </button>\n  </Todo$>\n);\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n\nimport { jsx, Node } from \"packages/render\";\nimport myStyled from \"packages/myStyled\";\n\nimport { TodoItem, TodoItems } from \"./types\";\n\ntype TodosProps = {\n  todos: TodoItems;\n  children: (todo: TodoItem) => Node;\n};\n\n// Quick fix to allow stylelint to do it's thing:\nconst styled = myStyled;\n\nconst Todos$ = styled(\"ul\")`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst TodosItem$ = styled(\"li\")`\n  padding: 0.25rem 0;\n`;\n\nexport const Todos = ({ todos, children }: TodosProps) => (\n  <Todos$>\n    {todos.map((todo) => (\n      <TodosItem$ key={todo.id}>{children(todo)}</TodosItem$>\n    ))}\n  </Todos$>\n);\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n\nimport { jsx, useState } from \"packages/render\";\nimport myStyled from \"packages/myStyled\";\n\nimport { Actions as TodoActions } from \"./duck\";\n\ntype TodoInputProps = {\n  createTodo: TodoActions[\"createTodo\"];\n};\n\n// Quick fix to allow stylelint to do it's thing:\nconst styled = myStyled;\n\nconst TodoListForm$ = styled(\"form\")`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.75rem;\n\n  > label {\n    display: flex;\n    flex-grow: 1;\n    align-items: center;\n    margin: 0;\n  }\n\n  input[type=\"text\"] {\n    width: 100%;\n    margin: 0 0.5rem 0 0.35rem;\n  }\n`;\n\nexport const TodoInput = ({ createTodo }: TodoInputProps) => {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <TodoListForm$\n      onSubmit={(e: any) => {\n        e.preventDefault();\n        createTodo(value.trim());\n        setValue(\"\");\n      }}\n    >\n      <label>\n        Todo\n        <input\n          value={value}\n          type=\"text\"\n          placeholder=\"Add new todo\"\n          className=\"form-control\"\n          onInput={(e: any) => {\n            setValue(e.target.value);\n          }}\n        />\n      </label>\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary\"\n        disabled={!value.trim()}\n      >\n        Add\n      </button>\n    </TodoListForm$>\n  );\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n\nimport { jsx } from \"packages/render\";\nimport myStyled from \"packages/myStyled\";\n\nimport { Todos } from \"./Todos\";\nimport { TodoItems } from \"./types\";\nimport { Actions as TodoActions } from \"./duck\";\nimport { TodoInput } from \"./TodoInput\";\nimport { Todo } from \"./Todo\";\n\ntype TodoListProps = {\n  todos: TodoItems;\n  createTodo: TodoActions[\"createTodo\"];\n  deleteTodo: TodoActions[\"deleteTodo\"];\n  updateTodo: TodoActions[\"updateTodo\"];\n  className?: string;\n};\n\n// Quick fix to allow stylelint to do it's thing:\nconst styled = myStyled;\n\nconst TodoList$ = styled(\"section\")`\n  padding: 1rem;\n  width: 100%;\n  border: 1px solid var(--secondary-color);\n  border-radius: 0.25rem;\n`;\n\nconst TodoListHeader$ = styled(\"header\")`\n  border-bottom: 1px solid var(--secondary-color);\n  margin-bottom: 1rem;\n`;\n\nexport const TodoList = ({\n  todos,\n  createTodo,\n  deleteTodo,\n  updateTodo,\n  className,\n}: TodoListProps) => (\n  <TodoList$ className={className}>\n    <TodoListHeader$>\n      <TodoInput createTodo={createTodo} />\n      <p>\n        You have <strong>{todos.length}</strong> todo\n        {(todos.length !== 1 && \"s\") || \"\"}\n      </p>\n    </TodoListHeader$>\n    <main>\n      <Todos todos={todos}>\n        {(todo) => (\n          <Todo todo={todo} deleteTodo={deleteTodo} updateTodo={updateTodo} />\n        )}\n      </Todos>\n    </main>\n  </TodoList$>\n);\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nexport * from \"./Todo\";\nexport * from \"./Todos\";\nexport * from \"./TodoList\";\nexport * from \"./types\";\nexport * from \"./duck\";\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n\nimport { jsx } from \"packages/render\";\nimport { connect } from \"packages/state\";\n\nimport { AppState } from \"../store\";\n\nimport {\n  Actions as TodoActions,\n  actions as todoActions,\n  TodoItems,\n  TodoList,\n} from \"../components/Todos\";\n\ntype TodosProps = {\n  todos: TodoItems;\n  createTodo: TodoActions[\"createTodo\"];\n  deleteTodo: TodoActions[\"deleteTodo\"];\n  updateTodo: TodoActions[\"updateTodo\"];\n};\n\nconst Todos = ({ todos, createTodo, deleteTodo, updateTodo }: TodosProps) => (\n  <main className=\"d-flex flex-md-row flex-column\">\n    <TodoList\n      todos={todos}\n      createTodo={createTodo}\n      deleteTodo={deleteTodo}\n      updateTodo={updateTodo}\n      className=\"mr-md-2 mb-3 flex-grow-1 align-self-start col-md\"\n    />\n    <pre className=\"ml-md-2 flex-grow-1 col-md\">\n      {JSON.stringify(todos, undefined, 1)}\n    </pre>\n  </main>\n);\n\nconst ConnectedTodos = connect(\n  ({ todos }: AppState) => ({\n    todos,\n  }),\n  {\n    ...todoActions,\n  }\n)(Todos);\n\nexport { ConnectedTodos as Todos };\n"]}