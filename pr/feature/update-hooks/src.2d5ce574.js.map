{"version":3,"sources":["../packages/render/types.ts","../packages/render/utils.ts","../packages/render/attributes.ts","../packages/render/jsx.ts","../packages/render/element.ts","../packages/render/hooks/useState.ts","../packages/render/hooks/useEffect.ts","../packages/render/context.ts","../packages/render/hooks/useContext.ts","../packages/render/hooks/index.ts","../packages/render/render.ts","../packages/render/index.ts","../packages/state/types.ts","../packages/state/createAction.ts","../packages/state/createReducer.ts","../packages/state/createStore.ts","../packages/state/getType.ts","../packages/state/connect.tsx","../packages/state/index.ts","../src/components/Todos/duck.ts","../src/store.ts","../node_modules/stylis/stylis.js","../packages/myStyled/utils.ts","../packages/myStyled/hash.ts","../packages/myStyled/stylesheet.ts","../packages/myStyled/css.ts","../packages/myStyled/myStyled.ts","../packages/myStyled/index.ts","../src/components/Avatar/Avatar.tsx","../src/components/Avatar/index.ts","../src/components/Header/Header.tsx","../src/components/Header/index.ts","../src/components/Todos/Todo.tsx","../src/components/Todos/Todos.tsx","../src/components/Todos/TodoInput.tsx","../src/components/Todos/TodoList.tsx","../src/components/Todos/index.ts","../src/containers/Todos.tsx","../src/App.tsx","../src/index.ts"],"names":[],"mappings":"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","file":"src.2d5ce574.js","sourceRoot":"../public","sourcesContent":["/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nexport const NODE_TYPE_FRAGMENT = \"#fragment\";\n\nexport type AnyFunc = (...args: any[]) => any;\n\nexport type Key = string | number | null;\n\nexport type NodeType<P = any> =\n  | {\n      [K in keyof JSX.IntrinsicElements]: P extends JSX.IntrinsicElements[K]\n        ? K\n        : never;\n    }[keyof JSX.IntrinsicElements]\n  | typeof NODE_TYPE_FRAGMENT\n  | FC<P>;\n\nexport type Node<P = any> = {\n  type: NodeType<P>;\n  props: P;\n  children?: Children;\n  key: Key;\n};\n\nexport type Children<P = any> = AnyNode<P>[];\n\nexport type AnyNode<P = any> = Node<P> | string;\n\nexport type FC<P = any> = (props: P) => Node<P>;\n\nexport interface HTMLElementMap extends HTMLElement {\n  [key: string]: any;\n}\n\nexport type Props = {\n  [key: string]: any;\n};\n\nexport type AnyCallback = (() => void) | void;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { Node } from \"./types\";\n\ntype MappedProps = {\n  [key: string]: string;\n};\n\nconst mappedProps: MappedProps = {\n  className: \"class\",\n  htmlFor: \"for\",\n};\n\nexport const propertyMap = (name: string) => {\n  if (mappedProps[name]) {\n    return mappedProps[name];\n  } else if (/^on/.test(name)) {\n    return name.toLowerCase();\n  }\n\n  return name;\n};\n\nexport const isNode = (node: any): node is Node =>\n  (typeof node === \"object\" &&\n    Object.prototype.hasOwnProperty.call(node, \"type\")) ||\n  false;\n\nexport const classnames = (...classNames: (string | undefined)[]): string =>\n  classNames.join(\" \");\n\ntype LooseRef<T = any> = {\n  current: T;\n};\n\nexport const looseRef = <T>(initial: T): LooseRef<T> => ({\n  current: initial,\n});\n\nexport type Deps = any[];\n\nexport const hasChanged = <T extends Deps = Deps>(deps: T, prevDeps?: T) =>\n  !prevDeps || deps.filter((d, i) => d !== prevDeps[i]).length > 0;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { AnyFunc, HTMLElementMap, Props } from \"./types\";\nimport { propertyMap } from \"./utils\";\n\nexport const setAttribute = (\n  element: HTMLElementMap,\n  name: string,\n  value: string | AnyFunc\n) => {\n  const propertyName = propertyMap(name);\n\n  if (typeof value === \"function\") {\n    element[propertyName] = value;\n  } else {\n    if (value) {\n      element.setAttribute(propertyName, value);\n    } else {\n      element.removeAttribute(propertyName);\n    }\n    element[propertyName] = value;\n  }\n};\n\nexport const setAttributes = (element: HTMLElement, props: Props) =>\n  Object.keys(props || {}).forEach((name) =>\n    setAttribute(element, name, props[name])\n  );\n\nexport const removeAttribute = (element: HTMLElement, name: string) =>\n  element.removeAttribute(propertyMap(name));\n\nexport const updateAttribute = (\n  element: HTMLElement,\n  name: string,\n  value: string,\n  prevValue: string\n) => {\n  if (value !== prevValue) {\n    if (value === undefined) {\n      removeAttribute(element, name);\n    } else if (!prevValue || value !== prevValue) {\n      setAttribute(element, name, value);\n    }\n  }\n};\n\nexport const updateAttributes = (\n  element: HTMLElement,\n  props: Props,\n  prevProps: Props = {}\n) =>\n  Object.keys({ ...props, ...prevProps }).forEach((name) =>\n    updateAttribute(element, name, props[name], prevProps[name])\n  );\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport {\n  Children,\n  Key,\n  Node,\n  NODE_TYPE_FRAGMENT,\n  NodeType,\n  Props,\n} from \"./types\";\n\nconst flattenChildren = (children: Children | Children[]): Children =>\n  (children.length === 1 && Array.isArray(children[0]) && children[0]\n    ? children[0]\n    : children) as Children;\n\nexport const jsxFrag = ({\n  children,\n  ...props\n}: {\n  children: Children;\n}): Node & { key: Key } => ({\n  type: NODE_TYPE_FRAGMENT,\n  props,\n  children: Array.isArray(children) ? children : [children],\n  key: null,\n});\n\nexport const jsx = (\n  type: NodeType,\n  props: Props = {},\n  ...children: Children | Children[]\n): Node => {\n  const { key, ...rest } = props || {};\n\n  return type === jsxFrag\n    ? type({\n        ...rest,\n        children: flattenChildren(children),\n        key,\n      })\n    : {\n        type,\n        props: rest,\n        children: flattenChildren(children),\n        key: key || null,\n      };\n};\n\n(global as any).jsxFrag = jsxFrag;\n(global as any).jsx = jsx;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport {\n  AnyNode,\n  Children,\n  Node,\n  NODE_TYPE_FRAGMENT,\n  NodeType,\n  Props,\n} from \"./types\";\nimport { isNode } from \"./utils\";\nimport { setAttributes, updateAttributes } from \"./attributes\";\nimport { jsx } from \"./jsx\";\n\nexport const createElement = (\n  type: NodeType,\n  props: Props = {},\n  children?: Children | Node\n): Node => {\n  if (Array.isArray(children)) {\n    return jsx(type, props, ...children);\n  } else if (children) {\n    return jsx(type, props, children);\n  } else {\n    return jsx(type, props);\n  }\n};\n\nconst createDocumentElement = (node: AnyNode): HTMLElement | Text => {\n  if (isNode(node) && typeof node.type === \"string\") {\n    const element = document.createElement(node.type);\n\n    setAttributes(element, node?.props);\n\n    node?.props?.ref?.(element);\n\n    return element;\n  }\n\n  return document.createTextNode(node.toString());\n};\n\nconst hasChanged = (node: AnyNode, prevNode: AnyNode) =>\n  typeof node !== typeof prevNode ||\n  (isNode(node) && node.type) !== (isNode(prevNode) && prevNode.type);\n\nconst updateChildren = (\n  element: HTMLElement,\n  children: Children = [],\n  prevChildren: Children = [],\n  index: number\n) => {\n  const nodeChildrenLength = children.length;\n  const prevNodeChildrenLength = prevChildren.length;\n  const nodes: Children = [];\n\n  for (\n    let childIndex = 0;\n    childIndex < nodeChildrenLength || childIndex < prevNodeChildrenLength;\n    childIndex++\n  ) {\n    const node = updateTree(\n      element.childNodes[index] as HTMLElement,\n      children[childIndex],\n      prevChildren[childIndex],\n      childIndex\n    );\n\n    if (node !== undefined) {\n      nodes.push(node);\n    }\n  }\n\n  return nodes;\n};\n\nconst flattenChildren = (children: Children = []): Children =>\n  children.reduce((children, child) => {\n    if (isNode(child) && child.type === NODE_TYPE_FRAGMENT) {\n      return [...children, ...flattenChildren(child.children)];\n    }\n    return [...children, child];\n  }, [] as Children);\n\nconst updateNode = (\n  element: HTMLElement,\n  node: AnyNode,\n  prevNode?: AnyNode,\n  index = 0\n): AnyNode | undefined =>\n  (isNode(node) && {\n    ...node,\n    children: updateChildren(\n      element,\n      flattenChildren(node.children),\n      (isNode(prevNode) && flattenChildren(prevNode?.children)) || undefined,\n      index\n    ),\n  }) ||\n  node;\n\nexport const updateTree = (\n  element: HTMLElement,\n  node: AnyNode,\n  prevNode?: AnyNode,\n  index = 0\n): AnyNode | undefined => {\n  if (isNode(node) && typeof node?.type === \"function\") {\n    // @TODO: process hooks - would add support for unmounting effects etc.\n    // activeHooks.beginCollect();\n\n    const componentNode = node.type({\n      ...node.props,\n      children: node.children?.length === 1 ? node.children[0] : node.children,\n    });\n\n    // const componentStates = activeHooks.collect();\n    // if (componentStates.length > 0) {\n    //   componentStates.byType<UseEffect>(useEffect).forEach((s) => s.callback());\n    //\n    //   console.log(\"----COLLECTED\", node.type.name, componentStates);\n    // }\n\n    const componentTree = updateTree(\n      element,\n      componentNode,\n      isNode(prevNode) ? prevNode?.children?.[0] : prevNode,\n      index\n    );\n\n    return {\n      ...node,\n      children: componentTree ? [componentTree] : [],\n    };\n  }\n\n  if (prevNode === undefined) {\n    element.appendChild(createDocumentElement(node));\n  } else if (node === undefined) {\n    // @TODO: unmount and mounted components...!\n    element.removeChild(element.childNodes[index]);\n    return undefined;\n  } else if (hasChanged(node, prevNode)) {\n    element.replaceChild(\n      createDocumentElement(node),\n      element.childNodes[index]\n    );\n\n    return updateNode(element, node, undefined, index);\n  } else if (isNode(node)) {\n    updateAttributes(\n      element.childNodes[index] as HTMLElement,\n      node.props,\n      isNode(prevNode) ? prevNode.props : undefined\n    );\n  } else if (element.childNodes[index].nodeValue !== node) {\n    element.childNodes[index].nodeValue = node.toString();\n  }\n\n  return updateNode(element, node, prevNode, index);\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport activeHooks, { HookImplementation } from \"./index\";\n\nconst HOOK_TYPE = \"useState\";\n\ntype UseState<S> = {\n  value: S;\n  setter: (newValue: S) => S;\n} & HookImplementation;\n\nexport const useState = <S = any>(initialState: S): [S, (newValue: S) => S] => {\n  const hook = activeHooks.getCurrent<UseState<S>>();\n\n  const currentState = hook.getValue();\n\n  const updatedState = hook.setValue({\n    type: HOOK_TYPE,\n    value: currentState?.value ?? initialState,\n    setter(newValue: S) {\n      if (updatedState.value !== newValue) {\n        hook.setValue({\n          ...updatedState,\n          value: newValue,\n        });\n        hook.options.render();\n      }\n      return newValue;\n    },\n  });\n\n  return [updatedState.value, updatedState.setter];\n};\n\nuseState.type = HOOK_TYPE;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport activeHooks, { HookImplementation } from \"./index\";\nimport { Deps, hasChanged } from \"../utils\";\nimport { AnyCallback } from \"../types\";\n\nconst HOOK_TYPE = \"useEffect\";\n\ntype UseEffectCallback = () => AnyCallback;\n\nexport type UseEffect = {\n  deps: Deps;\n  cleanup?: AnyCallback;\n} & HookImplementation;\n\nexport const useEffect = (callback: UseEffectCallback, deps: Deps): void => {\n  const hook = activeHooks.getCurrent<UseEffect>();\n\n  const currentState = hook.getValue();\n\n  const cleanup = () => {\n    if (hasChanged(deps, currentState?.deps)) {\n      currentState?.cleanup && currentState.cleanup();\n      return callback();\n    }\n\n    return currentState?.cleanup;\n  };\n\n  hook.setValue({\n    type: HOOK_TYPE,\n    deps,\n    cleanup: cleanup(),\n  });\n};\n\nuseEffect.type = HOOK_TYPE;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { Node } from \"./types\";\nimport { looseRef } from \"./utils\";\n\nexport const getValueSymbol = Symbol(\"getValueSymbol\");\n\nexport type Context<T = any> = {\n  [getValueSymbol]: () => T | undefined;\n  Provider: ({ value, children }: { value: T; children: Node }) => Node;\n};\n\nexport const createContext = <T = any>(defaultValue?: T): Context<T> => {\n  const currentValue = looseRef(defaultValue);\n\n  return {\n    [getValueSymbol]: () => currentValue.current,\n    Provider: ({ value, children }) => {\n      if (currentValue.current !== value) {\n        currentValue.current = value;\n      }\n\n      return children;\n    },\n  };\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { Context, getValueSymbol } from \"../context\";\n\nconst HOOK_TYPE = \"useContext\";\n\nexport const useContext = <T = any>(context: Context<T>): T | undefined =>\n  context[getValueSymbol]();\n\nuseContext.type = HOOK_TYPE;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\ntype HookOptions = {\n  render: () => void;\n};\n\nexport type HookImplementation = {\n  id: number;\n  type: string;\n};\n\nclass State extends Array<HookImplementation> {\n  constructor(...items: HookImplementation[]) {\n    super(...items);\n\n    Object.setPrototypeOf(this, State.prototype);\n  }\n\n  byType<T extends HookImplementation>(\n    ...types: Omit<HookImplementation, \"id\">[]\n  ): T[] {\n    const filterType = types.map(({ type }) => type);\n    return this.filter(({ type }) => filterType.indexOf(type) !== -1) as T[];\n  }\n}\n\ntype Hook = {\n  index: number;\n  state: State;\n  options: HookOptions;\n};\n\nexport type HookID = number;\n\ntype Hooks = Hook[] & {\n  [key: number]: Hook;\n};\n\ntype HookContainer<T> = {\n  options: HookOptions;\n  getValue: () => T | undefined;\n  setValue: (value: Omit<T, \"id\">) => T;\n};\n\ntype HooksContainer = {\n  register: (options: HookOptions) => HookID;\n  setActive: (id: HookID) => void;\n  getActive: () => Hook;\n  getCurrent: <T = any>() => HookContainer<T>;\n  inspectActive: <T = any>() => HookContainer<T> | undefined;\n  beginCollect: () => void;\n  collect: () => State;\n};\n\nconst hook = (options: HookOptions): Hook => ({\n  index: 0,\n  state: new State(),\n  options,\n});\n\nconst ActiveHooks = (): HooksContainer => {\n  let activeId: HookID | undefined;\n  let hooks: Hooks = [];\n  let collectedHookStartIndex: number;\n\n  const getActiveHook = (activeId?: HookID): Hook => {\n    if (activeId === undefined) {\n      throw new TypeError(\"No active hooks\");\n    }\n\n    return hooks[activeId];\n  };\n\n  const getActiveHookContainer = (\n    activeId?: HookID,\n    activeIndex?: number\n  ): HookContainer<any> => {\n    const hook = getActiveHook(activeId);\n    const currentIndex = activeIndex ?? hook.index;\n    const hookState = hook.state[currentIndex];\n\n    return {\n      options: hook.options,\n      getValue: () => hookState,\n      setValue: (value: Omit<HookImplementation, \"id\">) => {\n        hook.state[currentIndex] = {\n          id: currentIndex,\n          ...value,\n        };\n        return value;\n      },\n    };\n  };\n\n  return {\n    register(options) {\n      hooks = [...hooks, hook(options)];\n      return hooks.length - 1;\n    },\n    setActive: (id) => {\n      activeId = id;\n      hooks[activeId].index = 0;\n    },\n    getActive() {\n      return getActiveHook(activeId);\n    },\n    getCurrent() {\n      const current = getActiveHookContainer(activeId);\n      this.getActive().index++;\n      return current;\n    },\n    inspectActive() {\n      return getActiveHookContainer(activeId, this.getActive().index - 1);\n    },\n    beginCollect() {\n      collectedHookStartIndex = this.getActive().index;\n    },\n    collect() {\n      const hook = this.getActive();\n      const currentIndex = hook.index;\n\n      if (currentIndex !== collectedHookStartIndex) {\n        return new State(\n          ...hook.state\n            .slice(collectedHookStartIndex, currentIndex)\n            .map((state) => ({ ...state }))\n        );\n      }\n\n      return new State();\n    },\n  };\n};\n\nexport default ActiveHooks();\n\nexport * from \"./useState\";\nexport * from \"./useEffect\";\nexport * from \"./useContext\";\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { AnyNode, FC } from \"./types\";\nimport { updateTree } from \"./element\";\nimport activeHooks, { HookID } from \"./hooks\";\n\ntype MxContainer = {\n  render: (component: FC) => (mountPoint: HTMLElement) => void;\n};\n\nconst MxFactory = (): MxContainer => {\n  let hookId: HookID;\n  let previousTree: AnyNode | undefined;\n\n  return {\n    render: (component) => (mountPoint) => {\n      const renderTree = () => {\n        activeHooks.setActive(hookId);\n\n        previousTree = updateTree(mountPoint, component({}), previousTree);\n      };\n\n      hookId = activeHooks.register({\n        render: renderTree,\n      });\n\n      renderTree();\n    },\n  };\n};\n\nexport const Mx = MxFactory();\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nexport { Mx as default } from \"./render\";\n\nexport { Node, Children, FC, HTMLElementMap } from \"./types\";\n\nexport { classnames } from \"./utils\";\n\nexport { createElement } from \"./element\";\n\nexport { jsx, jsxFrag } from \"./jsx\";\n\nexport * from \"./hooks\";\n\nexport * from \"./context\";\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { FC } from \"packages/render\";\n\nexport const typeSymbol = Symbol(\"type\");\n\nexport type ActionType = string;\n\nexport type ActionPayload<P> = {\n  type: ActionType;\n  payload: P;\n};\n\nexport type StoreCallback<S> = (newState: S, state: S) => void;\n\nexport type Reducer<S, P, A extends ActionPayload<P>> = (\n  state: S,\n  action: A\n) => S;\n\nexport type Reducers<\n  S = any,\n  P = any,\n  A extends ActionPayload<P> = ActionPayload<P>\n> = {\n  [K in keyof S]: Reducer<S[K], P, A>;\n};\n\nexport type State<S> = {\n  [K in keyof S]: S[K];\n};\n\nexport type PayloadCreator<A extends any[], P> = (...args: A) => P;\n\nexport type ActionCreator<A extends any[], P> = {\n  (...args: A): ActionPayload<P>;\n  [typeSymbol]: string;\n};\n\nexport type Dispatch = <P>(action: ActionPayload<P>) => void;\n\nexport type Store<S> = {\n  dispatch: Dispatch;\n  getState: () => S;\n  subscribe: (cb: StoreCallback<S>) => void;\n  unsubscribe: (cb: StoreCallback<S>) => void;\n};\n\nexport type Actions = {\n  [key: string]: ActionCreator<any, any>;\n};\n\nexport type ReducersMap<\n  S,\n  P = any,\n  A extends ActionPayload<P> = ActionPayload<P>\n> = {\n  [key: string]: Reducer<S, P, A>;\n};\n\nexport type GetProps<C> = C extends FC<infer P> ? P : never;\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport type Shared<InjectedProps, DecorationTargetProps> = {\n  [P in Extract<\n    keyof InjectedProps,\n    keyof DecorationTargetProps\n  >]?: InjectedProps[P] extends DecorationTargetProps[P]\n    ? DecorationTargetProps[P]\n    : never;\n};\n\nexport type Matching<InjectedProps, DecorationTargetProps> = {\n  [P in keyof DecorationTargetProps]: P extends keyof InjectedProps\n    ? InjectedProps[P] extends DecorationTargetProps[P]\n      ? DecorationTargetProps[P]\n      : InjectedProps[P]\n    : DecorationTargetProps[P];\n};\n\nexport type InferableComponentEnhancerWithProps<TInjectedProps, TNeedsProps> = <\n  C extends FC<Matching<GetProps<C>, TInjectedProps>>\n>(\n  component: C\n) => FC<\n  Omit<GetProps<C>, keyof Shared<TInjectedProps, GetProps<C>>> & TNeedsProps\n>;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { ActionCreator, ActionType, PayloadCreator, typeSymbol } from \"./types\";\n\nexport const createAction = <A extends any[], P>(\n  type: ActionType,\n  payloadCreator: PayloadCreator<A, P>\n): ActionCreator<A, P> => {\n  const action = (...args: A) => ({\n    type,\n    payload: payloadCreator(...args),\n  });\n\n  const typedAction = action as ActionCreator<A, P>;\n\n  typedAction[typeSymbol] = type;\n\n  return typedAction;\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { ActionPayload, ReducersMap } from \"./types\";\n\nexport const createReducer = <\n  S extends any,\n  P,\n  A extends ActionPayload<P> = ActionPayload<P>\n>(\n  reducers: ReducersMap<S, P, A>\n) => (state: S, action: A): S => {\n  const reducer = reducers[action.type];\n  return (reducer && reducer(state, action)) || state;\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { ActionPayload, Reducers, State, Store, StoreCallback } from \"./types\";\n\nexport const createStore = <S>(reducers: Reducers<S>) => (\n  initialState: S\n): Store<S> => {\n  let state: State<S> = { ...initialState };\n  let callbacks: StoreCallback<S>[] = [];\n\n  return {\n    dispatch<P>(action: ActionPayload<P>) {\n      const newState = Object.keys(reducers).reduce((currentState, key) => {\n        const updatedState = reducers[key as keyof S](\n          currentState[key as keyof S],\n          action\n        );\n\n        if (updatedState !== currentState[key as keyof S]) {\n          return {\n            ...currentState,\n            [key]: updatedState,\n          };\n        }\n\n        return currentState;\n      }, state);\n\n      if (newState !== state) {\n        callbacks.forEach((callback) => callback(newState, state));\n        state = newState;\n      }\n    },\n    getState: () => state,\n    subscribe(cb: StoreCallback<S>) {\n      callbacks = [...callbacks, cb];\n    },\n    unsubscribe(cb: StoreCallback<S>) {\n      callbacks = callbacks.filter((callback) => callback !== cb);\n    },\n  };\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { ActionCreator, ActionType, typeSymbol } from \"./types\";\n\nexport const getType = <P>(actionCreator: ActionCreator<any, P>): ActionType =>\n  actionCreator[typeSymbol];\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n\nimport {\n  jsx,\n  Node,\n  createElement,\n  useEffect,\n  useState,\n  useContext,\n  createContext,\n} from \"packages/render\";\n\nimport { Store, Dispatch, InferableComponentEnhancerWithProps } from \"./types\";\n\ntype StoreContextProvider<S> = {\n  store: Store<S>;\n  children: Node;\n};\n\ntype MapStateToProps<TStateProps, TState> = {\n  (state: TState): TStateProps;\n};\n\ntype MapDispatchToPropsFunction<S> = {\n  (dispatch: Dispatch): S;\n};\n\ntype MapDispatchToProps<S> = S & DispatchMap;\n\ntype MapDispatch<S> = MapDispatchToProps<S> | MapDispatchToPropsFunction<S>;\n\ntype DispatchMap = {\n  [key: string]: (...args: any[]) => any;\n};\n\nconst StoreContext = createContext<Store<any>>({} as Store<any>);\n\nfunction isMapDispatchToPropsFunction<T>(\n  arg: any\n): arg is MapDispatchToPropsFunction<T> {\n  return (typeof arg === \"function\" && true) || false;\n}\n\nfunction isMapDispatchToProps<T>(arg: any): arg is MapDispatchToProps<T> {\n  return (arg && typeof arg === \"object\" && true) || false;\n}\n\nexport const StoreProvider = <S extends Record<string, unknown>>({\n  store,\n  children,\n}: StoreContextProvider<S>) => (\n  <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n);\n\nexport function connect<\n  TStateProps = any,\n  TOwnProps = any,\n  TDispatchProps = any,\n  TState = any\n>(\n  mapStateToProps: MapStateToProps<TStateProps, TState>,\n  mapDispatchToProps: MapDispatch<TDispatchProps>\n): InferableComponentEnhancerWithProps<\n  TStateProps & TDispatchProps,\n  TOwnProps\n> {\n  return (Component) => (ownProps) => {\n    const store = useContext(StoreContext);\n\n    if (!store) {\n      throw TypeError(\"No store provider configured\");\n    }\n\n    // @TODO: memorise the actions...\n    // const actions = useMemo(() => {\n    const getActions = () => {\n      if (isMapDispatchToPropsFunction(mapDispatchToProps)) {\n        return mapDispatchToProps(store.dispatch);\n      }\n\n      if (isMapDispatchToProps(mapDispatchToProps)) {\n        return Object.keys(mapDispatchToProps).reduce(\n          (currentActions, key) => ({\n            [key]: (...args: any[]) =>\n              store.dispatch(mapDispatchToProps[key](...args)),\n            ...currentActions,\n          }),\n          {} as DispatchMap\n        );\n      }\n\n      return {};\n    };\n    // }, [store]);\n\n    const actions = getActions();\n\n    const [props, setProps] = useState(mapStateToProps(store.getState()));\n\n    useEffect(() => {\n      const cb = (state: TState) => setProps(mapStateToProps(state));\n\n      store.subscribe(cb);\n\n      return () => {\n        store.unsubscribe(cb);\n      };\n    }, [store]);\n\n    return createElement(Component, {\n      ...ownProps,\n      ...props,\n      ...actions,\n    });\n  };\n}\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nexport { Actions, Store } from \"./types\";\n\nexport * from \"./createAction\";\nexport * from \"./createReducer\";\nexport * from \"./createStore\";\nexport * from \"./getType\";\nexport * from \"./connect\";\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { createAction, createReducer, getType } from \"packages/state\";\n\nimport { TodoItem, TodoItems } from \"./types\";\n\nexport const createTodo = createAction(\n  \"todo/CREATE\",\n  (text: string, complete?: boolean): TodoItem => ({\n    id: Date.now().toString(),\n    text,\n    complete: complete ?? false,\n  })\n);\n\nexport const deleteTodo = createAction(\n  \"todo/DELETE\",\n  (id: string): string => id\n);\n\nexport const updateTodo = createAction(\n  \"todo/UPDATE\",\n  (todo: TodoItem): TodoItem => todo\n);\n\nexport const actions = {\n  createTodo,\n  deleteTodo,\n  updateTodo,\n};\n\nexport type Actions = typeof actions;\n\nexport default createReducer<TodoItems, any>({\n  [getType(createTodo)]: (\n    state,\n    { payload }: ReturnType<Actions[\"createTodo\"]>\n  ) => [...state, payload],\n  [getType(deleteTodo)]: (\n    state,\n    { payload }: ReturnType<Actions[\"deleteTodo\"]>\n  ) => state.filter(({ id }) => id !== payload),\n  [getType(updateTodo)]: (\n    state,\n    { payload }: ReturnType<Actions[\"updateTodo\"]>\n  ) => state.map((todo) => (todo.id === payload.id ? payload : todo)),\n});\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { createStore } from \"packages/state\";\n\nimport { TodoItems } from \"./components/Todos\";\nimport todoReducer from \"./components/Todos/duck\";\n\nexport type AppState = {\n  todos: TodoItems;\n};\n\nconst rootReducer = {\n  todos: todoReducer,\n};\n\nexport const getStore = (initialState: AppState) =>\n  createStore(rootReducer)(initialState);\n","/*\n *          __        ___\n *    _____/ /___  __/ (_)____\n *   / ___/ __/ / / / / / ___/\n *  (__  ) /_/ /_/ / / (__  )\n * /____/\\__/\\__, /_/_/____/\n *          /____/\n *\n * light - weight css preprocessor @licence MIT\n */\n(function (factory) {/* eslint-disable */\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? (module['exports'] = factory(null)) :\n\t\ttypeof define === 'function' && define['amd'] ? define(factory(null)) :\n\t\t\t(window['stylis'] = factory(null))\n}(/** @param {*=} options */function factory (options) {/* eslint-disable */\n\n\t'use strict'\n\n\t/**\n\t * Notes\n\t *\n\t * The ['<method name>'] pattern is used to support closure compiler\n\t * the jsdoc signatures are also used to the same effect\n\t *\n\t * ----\n\t *\n\t * int + int + int === n4 [faster]\n\t *\n\t * vs\n\t *\n\t * int === n1 && int === n2 && int === n3\n\t *\n\t * ----\n\t *\n\t * switch (int) { case ints...} [faster]\n\t *\n\t * vs\n\t *\n\t * if (int == 1 && int === 2 ...)\n\t *\n\t * ----\n\t *\n\t * The (first*n1 + second*n2 + third*n3) format used in the property parser\n\t * is a simple way to hash the sequence of characters\n\t * taking into account the index they occur in\n\t * since any number of 3 character sequences could produce duplicates.\n\t *\n\t * On the other hand sequences that are directly tied to the index of the character\n\t * resolve a far more accurate measure, it's also faster\n\t * to evaluate one condition in a switch statement\n\t * than three in an if statement regardless of the added math.\n\t *\n\t * This allows the vendor prefixer to be both small and fast.\n\t */\n\n\tvar nullptn = /^\\0+/g /* matches leading null characters */\n\tvar formatptn = /[\\0\\r\\f]/g /* matches new line, null and formfeed characters */\n\tvar colonptn = /: */g /* splits animation rules */\n\tvar cursorptn = /zoo|gra/ /* assert cursor varient */\n\tvar transformptn = /([,: ])(transform)/g /* vendor prefix transform, older webkit */\n\tvar animationptn = /,+\\s*(?![^(]*[)])/g /* splits multiple shorthand notation animations */\n\tvar propertiesptn = / +\\s*(?![^(]*[)])/g /* animation properties */\n\tvar elementptn = / *[\\0] */g /* selector elements */\n\tvar selectorptn = /,\\r+?/g /* splits selectors */\n\tvar andptn = /([\\t\\r\\n ])*\\f?&/g /* match & */\n\tvar escapeptn = /:global\\(((?:[^\\(\\)\\[\\]]*|\\[.*\\]|\\([^\\(\\)]*\\))*)\\)/g /* matches :global(.*) */\n\tvar invalidptn = /\\W+/g /* removes invalid characters from keyframes */\n\tvar keyframeptn = /@(k\\w+)\\s*(\\S*)\\s*/ /* matches @keyframes $1 */\n\tvar plcholdrptn = /::(place)/g /* match ::placeholder varient */\n\tvar readonlyptn = /:(read-only)/g /* match :read-only varient */\n\tvar beforeptn = /\\s+(?=[{\\];=:>])/g /* matches \\s before ] ; = : */\n\tvar afterptn = /([[}=:>])\\s+/g /* matches \\s after characters [ } = : */\n\tvar tailptn = /(\\{[^{]+?);(?=\\})/g /* matches tail semi-colons ;} */\n\tvar whiteptn = /\\s{2,}/g /* matches repeating whitespace */\n\tvar pseudoptn = /([^\\(])(:+) */g /* pseudo element */\n\tvar writingptn = /[svh]\\w+-[tblr]{2}/ /* match writing mode property values */\n\tvar gradientptn = /([\\w-]+t\\()/g /* match *gradient property */\n\tvar supportsptn = /\\(\\s*(.*)\\s*\\)/g /* match supports (groups) */\n\tvar propertyptn = /([\\s\\S]*?);/g /* match properties leading semicolon */\n\tvar selfptn = /-self|flex-/g /* match flex- and -self in align-self: flex-*; */\n\tvar pseudofmt = /[^]*?(:[rp][el]a[\\w-]+)[^]*/ /* extrats :readonly or :placholder from selector */\n\tvar trimptn = /[ \\t]+$/ /* match tail whitspace */\n\tvar dimensionptn = /stretch|:\\s*\\w+\\-(?:conte|avail)/ /* match max/min/fit-content, fill-available */\n\tvar imgsrcptn = /([^-])(image-set\\()/\n\n\t/* vendors */\n\tvar webkit = '-webkit-'\n\tvar moz = '-moz-'\n\tvar ms = '-ms-'\n\n\t/* character codes */\n\tvar SEMICOLON = 59 /* ; */\n\tvar CLOSEBRACES = 125 /* } */\n\tvar OPENBRACES = 123 /* { */\n\tvar OPENPARENTHESES = 40 /* ( */\n\tvar CLOSEPARENTHESES = 41 /* ) */\n\tvar OPENBRACKET = 91 /* [ */\n\tvar CLOSEBRACKET = 93 /* ] */\n\tvar NEWLINE = 10 /* \\n */\n\tvar CARRIAGE = 13 /* \\r */\n\tvar TAB = 9 /* \\t */\n\tvar AT = 64 /* @ */\n\tvar SPACE = 32 /*   */\n\tvar AND = 38 /* & */\n\tvar DASH = 45 /* - */\n\tvar UNDERSCORE = 95 /* _ */\n\tvar STAR = 42 /* * */\n\tvar COMMA = 44 /* , */\n\tvar COLON = 58 /* : */\n\tvar SINGLEQUOTE = 39 /* ' */\n\tvar DOUBLEQUOTE = 34 /* \" */\n\tvar FOWARDSLASH = 47 /* / */\n\tvar GREATERTHAN = 62 /* > */\n\tvar PLUS = 43 /* + */\n\tvar TILDE = 126 /* ~ */\n\tvar NULL = 0 /* \\0 */\n\tvar FORMFEED = 12 /* \\f */\n\tvar VERTICALTAB = 11 /* \\v */\n\n\t/* special identifiers */\n\tvar KEYFRAME = 107 /* k */\n\tvar MEDIA = 109 /* m */\n\tvar SUPPORTS = 115 /* s */\n\tvar PLACEHOLDER = 112 /* p */\n\tvar READONLY = 111 /* o */\n\tvar IMPORT = 105 /* <at>i */\n\tvar CHARSET = 99 /* <at>c */\n\tvar DOCUMENT = 100 /* <at>d */\n\tvar PAGE = 112 /* <at>p */\n\n\tvar column = 1 /* current column */\n\tvar line = 1 /* current line numebr */\n\tvar pattern = 0 /* :pattern */\n\n\tvar cascade = 1 /* #id h1 h2 vs h1#id h2#id  */\n\tvar prefix = 1 /* vendor prefix */\n\tvar escape = 1 /* escape :global() pattern */\n\tvar compress = 0 /* compress output */\n\tvar semicolon = 0 /* no/semicolon option */\n\tvar preserve = 0 /* preserve empty selectors */\n\n\t/* empty reference */\n\tvar array = []\n\n\t/* plugins */\n\tvar plugins = []\n\tvar plugged = 0\n\tvar should = null\n\n\t/* plugin context */\n\tvar POSTS = -2\n\tvar PREPS = -1\n\tvar UNKWN = 0\n\tvar PROPS = 1\n\tvar BLCKS = 2\n\tvar ATRUL = 3\n\n\t/* plugin newline context */\n\tvar unkwn = 0\n\n\t/* keyframe animation */\n\tvar keyed = 1\n\tvar key = ''\n\n\t/* selector namespace */\n\tvar nscopealt = ''\n\tvar nscope = ''\n\n\t/**\n\t * Compile\n\t *\n\t * @param {Array<string>} parent\n\t * @param {Array<string>} current\n\t * @param {string} body\n\t * @param {number} id\n\t * @param {number} depth\n\t * @return {string}\n\t */\n\tfunction compile (parent, current, body, id, depth) {\n\t\tvar bracket = 0 /* brackets [] */\n\t\tvar comment = 0 /* comments /* // or /* */\n\t\tvar parentheses = 0 /* functions () */\n\t\tvar quote = 0 /* quotes '', \"\" */\n\n\t\tvar first = 0 /* first character code */\n\t\tvar second = 0 /* second character code */\n\t\tvar code = 0 /* current character code */\n\t\tvar tail = 0 /* previous character code */\n\t\tvar trail = 0 /* character before previous code */\n\t\tvar peak = 0 /* previous non-whitespace code */\n\n\t\tvar counter = 0 /* count sequence termination */\n\t\tvar context = 0 /* track current context */\n\t\tvar atrule = 0 /* track @at-rule context */\n\t\tvar pseudo = 0 /* track pseudo token index */\n\t\tvar caret = 0 /* current character index */\n\t\tvar format = 0 /* control character formating context */\n\t\tvar insert = 0 /* auto semicolon insertion */\n\t\tvar invert = 0 /* inverted selector pattern */\n\t\tvar length = 0 /* generic length address */\n\t\tvar eof = body.length /* end of file(length) */\n\t\tvar eol = eof - 1 /* end of file(characters) */\n\n\t\tvar char = '' /* current character */\n\t\tvar chars = '' /* current buffer of characters */\n\t\tvar child = '' /* next buffer of characters */\n\t\tvar out = '' /* compiled body */\n\t\tvar children = '' /* compiled children */\n\t\tvar flat = '' /* compiled leafs */\n\t\tvar selector /* generic selector address */\n\t\tvar result /* generic address */\n\n\t\t// ...build body\n\t\twhile (caret < eof) {\n\t\t\tcode = body.charCodeAt(caret)\n\n\t\t\t// eof varient\n\t\t\tif (caret === eol) {\n\t\t\t\t// last character + noop context, add synthetic padding for noop context to terminate\n\t\t\t\tif (comment + quote + parentheses + bracket !== 0) {\n\t\t\t\t\tif (comment !== 0) {\n\t\t\t\t\t\tcode = comment === FOWARDSLASH ? NEWLINE : FOWARDSLASH\n\t\t\t\t\t}\n\n\t\t\t\t\tquote = parentheses = bracket = 0\n\t\t\t\t\teof++\n\t\t\t\t\teol++\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (comment + quote + parentheses + bracket === 0) {\n\t\t\t\t// eof varient\n\t\t\t\tif (caret === eol) {\n\t\t\t\t\tif (format > 0) {\n\t\t\t\t\t\tchars = chars.replace(formatptn, '')\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chars.trim().length > 0) {\n\t\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\t\tcase CARRIAGE:\n\t\t\t\t\t\t\tcase NEWLINE: {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tchars += body.charAt(caret)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcode = SEMICOLON\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// auto semicolon insertion\n\t\t\t\tif (insert === 1) {\n\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t// false flags\n\t\t\t\t\t\tcase OPENBRACES:\n\t\t\t\t\t\tcase CLOSEBRACES:\n\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\tcase SINGLEQUOTE:\n\t\t\t\t\t\tcase OPENPARENTHESES:\n\t\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\t\tcase COMMA: {\n\t\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\tcase CARRIAGE:\n\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// valid\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\t\tlength = caret\n\t\t\t\t\t\t\tfirst = code\n\t\t\t\t\t\t\tcaret--\n\t\t\t\t\t\t\tcode = SEMICOLON\n\n\t\t\t\t\t\t\twhile (length < eof) {\n\t\t\t\t\t\t\t\tswitch (body.charCodeAt(length++)) {\n\t\t\t\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\t\t\t\tcase CARRIAGE:\n\t\t\t\t\t\t\t\t\tcase SEMICOLON: {\n\t\t\t\t\t\t\t\t\t\t++caret\n\t\t\t\t\t\t\t\t\t\tcode = first\n\t\t\t\t\t\t\t\t\t\tlength = eof\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcase COLON: {\n\t\t\t\t\t\t\t\t\t\tif (format > 0) {\n\t\t\t\t\t\t\t\t\t\t\t++caret\n\t\t\t\t\t\t\t\t\t\t\tcode = first\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcase OPENBRACES: {\n\t\t\t\t\t\t\t\t\t\tlength = eof\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// token varient\n\t\t\t\tswitch (code) {\n\t\t\t\t\tcase OPENBRACES: {\n\t\t\t\t\t\tchars = chars.trim()\n\t\t\t\t\t\tfirst = chars.charCodeAt(0)\n\t\t\t\t\t\tcounter = 1\n\t\t\t\t\t\tlength = ++caret\n\n\t\t\t\t\t\twhile (caret < eof) {\n\t\t\t\t\t\t\tswitch (code = body.charCodeAt(caret)) {\n\t\t\t\t\t\t\t\tcase OPENBRACES: {\n\t\t\t\t\t\t\t\t\tcounter++\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase CLOSEBRACES: {\n\t\t\t\t\t\t\t\t\tcounter--\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\t\t\t\t\tswitch (second = body.charCodeAt(caret + 1)) {\n\t\t\t\t\t\t\t\t\t\t// /*, //\n\t\t\t\t\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\t\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\t\t\t\t\t\t\tcaret = delimited(second, caret, eol, body)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// given \"[\" === 91 & \"]\" === 93 hence forth 91 + 1 + 1 === 93\n\t\t\t\t\t\t\t\tcase OPENBRACKET: {\n\t\t\t\t\t\t\t\t\tcode++\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// given \"(\" === 40 & \")\" === 41 hence forth 40 + 1 === 41\n\t\t\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\t\t\tcode++\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// quote tail delimiter is identical to the head delimiter hence noop,\n\t\t\t\t\t\t\t\t// fallthrough clauses have been shifted to the correct tail delimiter\n\t\t\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\t\t\tcase SINGLEQUOTE: {\n\t\t\t\t\t\t\t\t\twhile (caret++ < eol) {\n\t\t\t\t\t\t\t\t\t\tif (body.charCodeAt(caret) === code) {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (counter === 0) {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcaret++\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchild = body.substring(length, caret)\n\n\t\t\t\t\t\tif (first === NULL) {\n\t\t\t\t\t\t\tfirst = (chars = chars.replace(nullptn, '').trim()).charCodeAt(0)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tswitch (first) {\n\t\t\t\t\t\t\t// @at-rule\n\t\t\t\t\t\t\tcase AT: {\n\t\t\t\t\t\t\t\tif (format > 0) {\n\t\t\t\t\t\t\t\t\tchars = chars.replace(formatptn, '')\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsecond = chars.charCodeAt(1)\n\n\t\t\t\t\t\t\t\tswitch (second) {\n\t\t\t\t\t\t\t\t\tcase DOCUMENT:\n\t\t\t\t\t\t\t\t\tcase MEDIA:\n\t\t\t\t\t\t\t\t\tcase SUPPORTS:\n\t\t\t\t\t\t\t\t\tcase DASH: {\n\t\t\t\t\t\t\t\t\t\tselector = current\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\tselector = array\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tchild = compile(current, selector, child, second, depth+1)\n\t\t\t\t\t\t\t\tlength = child.length\n\n\t\t\t\t\t\t\t\t// preserve empty @at-rule\n\t\t\t\t\t\t\t\tif (preserve > 0 && length === 0) {\n\t\t\t\t\t\t\t\t\tlength = chars.length\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// execute plugins, @at-rule context\n\t\t\t\t\t\t\t\tif (plugged > 0) {\n\t\t\t\t\t\t\t\t\tselector = select(array, chars, invert)\n\t\t\t\t\t\t\t\t\tresult = proxy(ATRUL, child, selector, current, line, column, length, second, depth, id)\n\t\t\t\t\t\t\t\t\tchars = selector.join('')\n\n\t\t\t\t\t\t\t\t\tif (result !== void 0) {\n\t\t\t\t\t\t\t\t\t\tif ((length = (child = result.trim()).length) === 0) {\n\t\t\t\t\t\t\t\t\t\t\tsecond = 0\n\t\t\t\t\t\t\t\t\t\t\tchild = ''\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (length > 0) {\n\t\t\t\t\t\t\t\t\tswitch (second) {\n\t\t\t\t\t\t\t\t\t\tcase SUPPORTS: {\n\t\t\t\t\t\t\t\t\t\t\tchars = chars.replace(supportsptn, supports)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcase DOCUMENT:\n\t\t\t\t\t\t\t\t\t\tcase MEDIA:\n\t\t\t\t\t\t\t\t\t\tcase DASH: {\n\t\t\t\t\t\t\t\t\t\t\tchild = chars + '{' + child + '}'\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcase KEYFRAME: {\n\t\t\t\t\t\t\t\t\t\t\tchars = chars.replace(keyframeptn, '$1 $2' + (keyed > 0 ? key : ''))\n\t\t\t\t\t\t\t\t\t\t\tchild = chars + '{' + child + '}'\n\n\t\t\t\t\t\t\t\t\t\t\tif (prefix === 1 || (prefix === 2 && vendor('@'+child, 3))) {\n\t\t\t\t\t\t\t\t\t\t\t\tchild = '@' + webkit + child + '@' + child\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tchild = '@' + child\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\tchild = chars + child\n\n\t\t\t\t\t\t\t\t\t\t\tif (id === PAGE) {\n\t\t\t\t\t\t\t\t\t\t\t\tchild = (out += child, '')\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tchild = ''\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// selector\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tchild = compile(current, select(current, chars, invert), child, id, depth+1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchildren += child\n\n\t\t\t\t\t\t// reset\n\t\t\t\t\t\tcontext = 0\n\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\tpseudo = 0\n\t\t\t\t\t\tformat = 0\n\t\t\t\t\t\tinvert = 0\n\t\t\t\t\t\tatrule = 0\n\t\t\t\t\t\tchars = ''\n\t\t\t\t\t\tchild = ''\n\t\t\t\t\t\tcode = body.charCodeAt(++caret)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase CLOSEBRACES:\n\t\t\t\t\tcase SEMICOLON: {\n\t\t\t\t\t\tchars = (format > 0 ? chars.replace(formatptn, '') : chars).trim()\n\n\t\t\t\t\t\tif ((length = chars.length) > 1) {\n\t\t\t\t\t\t\t// monkey-patch missing colon\n\t\t\t\t\t\t\tif (pseudo === 0) {\n\t\t\t\t\t\t\t\tfirst = chars.charCodeAt(0)\n\n\t\t\t\t\t\t\t\t// first character is a letter or dash, buffer has a space character\n\t\t\t\t\t\t\t\tif ((first === DASH || first > 96 && first < 123)) {\n\t\t\t\t\t\t\t\t\tlength = (chars = chars.replace(' ', ':')).length\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// execute plugins, property context\n\t\t\t\t\t\t\tif (plugged > 0) {\n\t\t\t\t\t\t\t\tif ((result = proxy(PROPS, chars, current, parent, line, column, out.length, id, depth, id)) !== void 0) {\n\t\t\t\t\t\t\t\t\tif ((length = (chars = result.trim()).length) === 0) {\n\t\t\t\t\t\t\t\t\t\tchars = '\\0\\0'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfirst = chars.charCodeAt(0)\n\t\t\t\t\t\t\tsecond = chars.charCodeAt(1)\n\n\t\t\t\t\t\t\tswitch (first) {\n\t\t\t\t\t\t\t\tcase NULL: {\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase AT: {\n\t\t\t\t\t\t\t\t\tif (second === IMPORT || second === CHARSET) {\n\t\t\t\t\t\t\t\t\t\tflat += chars + body.charAt(caret)\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\tif (chars.charCodeAt(length-1) === COLON) {\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tout += property(chars, first, second, chars.charCodeAt(2))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reset\n\t\t\t\t\t\tcontext = 0\n\t\t\t\t\t\tinsert = 0\n\t\t\t\t\t\tpseudo = 0\n\t\t\t\t\t\tformat = 0\n\t\t\t\t\t\tinvert = 0\n\t\t\t\t\t\tchars = ''\n\t\t\t\t\t\tcode = body.charCodeAt(++caret)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// parse characters\n\t\t\tswitch (code) {\n\t\t\t\tcase CARRIAGE:\n\t\t\t\tcase NEWLINE: {\n\t\t\t\t\t// auto insert semicolon\n\t\t\t\t\tif (comment + quote + parentheses + bracket + semicolon === 0) {\n\t\t\t\t\t\t// valid non-whitespace characters that\n\t\t\t\t\t\t// may precede a newline\n\t\t\t\t\t\tswitch (peak) {\n\t\t\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\t\t\tcase SINGLEQUOTE:\n\t\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\t\tcase AT:\n\t\t\t\t\t\t\tcase TILDE:\n\t\t\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\t\tcase PLUS:\n\t\t\t\t\t\t\tcase FOWARDSLASH:\n\t\t\t\t\t\t\tcase DASH:\n\t\t\t\t\t\t\tcase COLON:\n\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\t\tcase OPENBRACES:\n\t\t\t\t\t\t\tcase CLOSEBRACES: {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t// current buffer has a colon\n\t\t\t\t\t\t\t\tif (pseudo > 0) {\n\t\t\t\t\t\t\t\t\tinsert = 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// terminate line comment\n\t\t\t\t\tif (comment === FOWARDSLASH) {\n\t\t\t\t\t\tcomment = 0\n\t\t\t\t\t} else if (cascade + context === 0 && id !== KEYFRAME && chars.length > 0) {\n\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\tchars += '\\0'\n\t\t\t\t\t}\n\n\t\t\t\t\t// execute plugins, newline context\n\t\t\t\t\tif (plugged * unkwn > 0) {\n\t\t\t\t\t\tproxy(UNKWN, chars, current, parent, line, column, out.length, id, depth, id)\n\t\t\t\t\t}\n\n\t\t\t\t\t// next line, reset column position\n\t\t\t\t\tcolumn = 1\n\t\t\t\t\tline++\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase SEMICOLON:\n\t\t\t\tcase CLOSEBRACES: {\n\t\t\t\t\tif (comment + quote + parentheses + bracket === 0) {\n\t\t\t\t\t\tcolumn++\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\t// increment column position\n\t\t\t\t\tcolumn++\n\n\t\t\t\t\t// current character\n\t\t\t\t\tchar = body.charAt(caret)\n\n\t\t\t\t\t// remove comments, escape functions, strings, attributes and prepare selectors\n\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\tif (quote + bracket + comment === 0) {\n\t\t\t\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\t\t\tcase COLON:\n\t\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\t\t\t\tchar = ''\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\tif (code !== SPACE) {\n\t\t\t\t\t\t\t\t\t\t\tchar = ' '\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// escape breaking control characters\n\t\t\t\t\t\tcase NULL: {\n\t\t\t\t\t\t\tchar = '\\\\0'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase FORMFEED: {\n\t\t\t\t\t\t\tchar = '\\\\f'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase VERTICALTAB: {\n\t\t\t\t\t\t\tchar = '\\\\v'\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// &\n\t\t\t\t\t\tcase AND: {\n\t\t\t\t\t\t\t// inverted selector pattern i.e html &\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0 && cascade > 0) {\n\t\t\t\t\t\t\t\tinvert = 1\n\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\tchar = '\\f' + char\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// ::p<l>aceholder, l\n\t\t\t\t\t\t// :read-on<l>y, l\n\t\t\t\t\t\tcase 108: {\n\t\t\t\t\t\t\tif (quote + comment + bracket + pattern === 0 && pseudo > 0) {\n\t\t\t\t\t\t\t\tswitch (caret - pseudo) {\n\t\t\t\t\t\t\t\t\t// ::placeholder\n\t\t\t\t\t\t\t\t\tcase 2: {\n\t\t\t\t\t\t\t\t\t\tif (tail === PLACEHOLDER && body.charCodeAt(caret-3) === COLON) {\n\t\t\t\t\t\t\t\t\t\t\tpattern = tail\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// :read-only\n\t\t\t\t\t\t\t\t\tcase 8: {\n\t\t\t\t\t\t\t\t\t\tif (trail === READONLY) {\n\t\t\t\t\t\t\t\t\t\t\tpattern = trail\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// :<pattern>\n\t\t\t\t\t\tcase COLON: {\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0) {\n\t\t\t\t\t\t\t\tpseudo = caret\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// selectors\n\t\t\t\t\t\tcase COMMA: {\n\t\t\t\t\t\t\tif (comment + parentheses + quote + bracket === 0) {\n\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\tchar += '\\r'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// quotes\n\t\t\t\t\t\tcase DOUBLEQUOTE:\n\t\t\t\t\t\tcase SINGLEQUOTE: {\n\t\t\t\t\t\t\tif (comment === 0) {\n\t\t\t\t\t\t\t\tquote = quote === code ? 0 : (quote === 0 ? code : quote)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// attributes\n\t\t\t\t\t\tcase OPENBRACKET: {\n\t\t\t\t\t\t\tif (quote + comment + parentheses === 0) {\n\t\t\t\t\t\t\t\tbracket++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase CLOSEBRACKET: {\n\t\t\t\t\t\t\tif (quote + comment + parentheses === 0) {\n\t\t\t\t\t\t\t\tbracket--\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// functions\n\t\t\t\t\t\tcase CLOSEPARENTHESES: {\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0) {\n\t\t\t\t\t\t\t\tparentheses--\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\tif (quote + comment + bracket === 0) {\n\t\t\t\t\t\t\t\tif (context === 0) {\n\t\t\t\t\t\t\t\t\tswitch (tail*2 + trail*3) {\n\t\t\t\t\t\t\t\t\t\t// :matches\n\t\t\t\t\t\t\t\t\t\tcase 533: {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// :global, :not, :nth-child etc...\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\tcounter = 0\n\t\t\t\t\t\t\t\t\t\t\tcontext = 1\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tparentheses++\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase AT: {\n\t\t\t\t\t\t\tif (comment + parentheses + quote + bracket + pseudo + atrule === 0) {\n\t\t\t\t\t\t\t\tatrule = 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// block/line comments\n\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\t\t\tif (quote + bracket + parentheses > 0) {\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tswitch (comment) {\n\t\t\t\t\t\t\t\t// initialize line/block comment context\n\t\t\t\t\t\t\t\tcase 0: {\n\t\t\t\t\t\t\t\t\tswitch (code*2 + body.charCodeAt(caret+1)*3) {\n\t\t\t\t\t\t\t\t\t\t// //\n\t\t\t\t\t\t\t\t\t\tcase 235: {\n\t\t\t\t\t\t\t\t\t\t\tcomment = FOWARDSLASH\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// /*\n\t\t\t\t\t\t\t\t\t\tcase 220: {\n\t\t\t\t\t\t\t\t\t\t\tlength = caret\n\t\t\t\t\t\t\t\t\t\t\tcomment = STAR\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// end block comment context\n\t\t\t\t\t\t\t\tcase STAR: {\n\t\t\t\t\t\t\t\t\tif (code === FOWARDSLASH && tail === STAR && length + 2 !== caret) {\n\t\t\t\t\t\t\t\t\t\t// /*<!> ... */, !\n\t\t\t\t\t\t\t\t\t\tif (body.charCodeAt(length+2) === 33) {\n\t\t\t\t\t\t\t\t\t\t\tout += body.substring(length, caret+1)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tchar = ''\n\t\t\t\t\t\t\t\t\t\tcomment = 0\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// ignore comment blocks\n\t\t\t\t\tif (comment === 0) {\n\t\t\t\t\t\t// aggressive isolation mode, divide each individual selector\n\t\t\t\t\t\t// including selectors in :not function but excluding selectors in :global function\n\t\t\t\t\t\tif (cascade + quote + bracket + atrule === 0 && id !== KEYFRAME && code !== SEMICOLON) {\n\t\t\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\t\tcase TILDE:\n\t\t\t\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\t\t\t\tcase PLUS:\n\t\t\t\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\t\t\tif (context === 0) {\n\t\t\t\t\t\t\t\t\t\t// outside of an isolated context i.e nth-child(<...>)\n\t\t\t\t\t\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\t\t\t\t\t\tcase CARRIAGE: {\n\t\t\t\t\t\t\t\t\t\t\t\tchar = char + '\\0'\n\t\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\t\tchar = '\\0' + char + (code === COMMA ? '' : '\\0')\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// within an isolated context, sleep untill it's terminated\n\t\t\t\t\t\t\t\t\t\tswitch (code) {\n\t\t\t\t\t\t\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\t\t\t\t\t\t\t// :globa<l>(\n\t\t\t\t\t\t\t\t\t\t\t\tif (pseudo + 7 === caret && tail === 108) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpseudo = 0\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tcontext = ++counter\n\t\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tcase CLOSEPARENTHESES: {\n\t\t\t\t\t\t\t\t\t\t\t\tif ((context = --counter) === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\t\t\t\t\t\tchar += '\\0'\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\tcase SPACE: {\n\t\t\t\t\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\t\t\t\t\tcase NULL:\n\t\t\t\t\t\t\t\t\t\tcase OPENBRACES:\n\t\t\t\t\t\t\t\t\t\tcase CLOSEBRACES:\n\t\t\t\t\t\t\t\t\t\tcase SEMICOLON:\n\t\t\t\t\t\t\t\t\t\tcase COMMA:\n\t\t\t\t\t\t\t\t\t\tcase FORMFEED:\n\t\t\t\t\t\t\t\t\t\tcase TAB:\n\t\t\t\t\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\t\t\t\t\tcase NEWLINE:\n\t\t\t\t\t\t\t\t\t\tcase CARRIAGE: {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\t// ignore in isolated contexts\n\t\t\t\t\t\t\t\t\t\t\tif (context === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tformat = 1\n\t\t\t\t\t\t\t\t\t\t\t\tchar += '\\0'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// concat buffer of characters\n\t\t\t\t\t\tchars += char\n\n\t\t\t\t\t\t// previous non-whitespace character code\n\t\t\t\t\t\tif (code !== SPACE && code !== TAB) {\n\t\t\t\t\t\t\tpeak = code\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// tail character codes\n\t\t\ttrail = tail\n\t\t\ttail = code\n\n\t\t\t// visit every character\n\t\t\tcaret++\n\t\t}\n\n\t\tlength = out.length\n\n\t\t// preserve empty selector\n \t\tif (preserve > 0) {\n \t\t\tif (length === 0 && children.length === 0 && (current[0].length === 0) === false) {\n \t\t\t\tif (id !== MEDIA || (current.length === 1 && (cascade > 0 ? nscopealt : nscope) === current[0])) {\n\t\t\t\t\tlength = current.join(',').length + 2\n \t\t\t\t}\n \t\t\t}\n\t\t}\n\n\t\tif (length > 0) {\n\t\t\t// cascade isolation mode?\n\t\t\tselector = cascade === 0 && id !== KEYFRAME ? isolate(current) : current\n\n\t\t\t// execute plugins, block context\n\t\t\tif (plugged > 0) {\n\t\t\t\tresult = proxy(BLCKS, out, selector, parent, line, column, length, id, depth, id)\n\n\t\t\t\tif (result !== void 0 && (out = result).length === 0) {\n\t\t\t\t\treturn flat + out + children\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tout = selector.join(',') + '{' + out + '}'\n\n\t\t\tif (prefix*pattern !== 0) {\n\t\t\t\tif (prefix === 2 && !vendor(out, 2))\n\t\t\t\t\tpattern = 0\n\n\t\t\t\tswitch (pattern) {\n\t\t\t\t\t// ::read-only\n\t\t\t\t\tcase READONLY: {\n\t\t\t\t\t\tout = out.replace(readonlyptn, ':'+moz+'$1')+out\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// ::placeholder\n\t\t\t\t\tcase PLACEHOLDER: {\n\t\t\t\t\t\tout = (\n\t\t\t\t\t\t\tout.replace(plcholdrptn, '::' + webkit + 'input-$1') +\n\t\t\t\t\t\t\tout.replace(plcholdrptn, '::' + moz + '$1') +\n\t\t\t\t\t\t\tout.replace(plcholdrptn, ':' + ms + 'input-$1') + out\n\t\t\t\t\t\t)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpattern = 0\n\t\t\t}\n\t\t}\n\n\t\treturn flat + out + children\n\t}\n\n\t/**\n\t * Select\n\t *\n\t * @param {Array<string>} parent\n\t * @param {string} current\n\t * @param {number} invert\n\t * @return {Array<string>}\n\t */\n\tfunction select (parent, current, invert) {\n\t\tvar selectors = current.trim().split(selectorptn)\n\t\tvar out = selectors\n\n\t\tvar length = selectors.length\n\t\tvar l = parent.length\n\n\t\tswitch (l) {\n\t\t\t// 0-1 parent selectors\n\t\t\tcase 0:\n\t\t\tcase 1: {\n\t\t\t\tfor (var i = 0, selector = l === 0 ? '' : parent[0] + ' '; i < length; ++i) {\n\t\t\t\t\tout[i] = scope(selector, out[i], invert, l).trim()\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// >2 parent selectors, nested\n\t\t\tdefault: {\n\t\t\t\tfor (var i = 0, j = 0, out = []; i < length; ++i) {\n\t\t\t\t\tfor (var k = 0; k < l; ++k) {\n\t\t\t\t\t\tout[j++] = scope(parent[k] + ' ', selectors[i], invert, l).trim()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn out\n\t}\n\n\t/**\n\t * Scope\n\t *\n\t * @param {string} parent\n\t * @param {string} current\n\t * @param {number} invert\n\t * @param {number} level\n\t * @return {string}\n\t */\n\tfunction scope (parent, current, invert, level) {\n\t\tvar selector = current\n\t\tvar code = selector.charCodeAt(0)\n\n\t\t// trim leading whitespace\n\t\tif (code < 33) {\n\t\t\tcode = (selector = selector.trim()).charCodeAt(0)\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// &\n\t\t\tcase AND: {\n\t\t\t\tswitch (cascade + level) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\tcase 1: {\n\t\t\t\t\t\tif (parent.trim().length === 0) {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\treturn selector.replace(andptn, '$1'+parent.trim())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// :\n\t\t\tcase COLON: {\n\t\t\t\tswitch (selector.charCodeAt(1)) {\n\t\t\t\t\t// g in :global\n\t\t\t\t\tcase 103: {\n\t\t\t\t\t\tif (escape > 0 && cascade > 0) {\n\t\t\t\t\t\t\treturn selector.replace(escapeptn, '$1').replace(andptn, '$1'+nscope)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\t// :hover\n\t\t\t\t\t\treturn parent.trim() + selector.replace(andptn, '$1'+parent.trim())\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\t// html &\n\t\t\t\tif (invert*cascade > 0 && selector.indexOf('\\f') > 0) {\n\t\t\t\t\treturn selector.replace(andptn, (parent.charCodeAt(0) === COLON ? '' : '$1')+parent.trim())\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn parent + selector\n\t}\n\n\t/**\n\t * Property\n\t *\n\t * @param {string} input\n\t * @param {number} first\n\t * @param {number} second\n\t * @param {number} third\n\t * @return {string}\n\t */\n\tfunction property (input, first, second, third) {\n\t\tvar index = 0\n\t\tvar out = input + ';'\n\t\tvar hash = (first*2) + (second*3) + (third*4)\n\t\tvar cache\n\n\t\t// animation: a, n, i characters\n\t\tif (hash === 944) {\n\t\t\treturn animation(out)\n\t\t} else if (prefix === 0 || (prefix === 2 && !vendor(out, 1))) {\n\t\t\treturn out\n\t\t}\n\n\t\t// vendor prefix\n\t\tswitch (hash) {\n\t\t\t// text-decoration/text-size-adjust/text-shadow/text-align/text-transform: t, e, x\n\t\t\tcase 1015: {\n\t\t\t\t// text-shadow/text-align/text-transform, a\n\t\t\t\treturn out.charCodeAt(10) === 97 ? webkit + out + out : out\n\t\t\t}\n\t\t\t// filter/fill f, i, l\n\t\t\tcase 951: {\n\t\t\t\t// filter, t\n\t\t\t\treturn out.charCodeAt(3) === 116 ? webkit + out + out : out\n\t\t\t}\n\t\t\t// color/column, c, o, l\n\t\t\tcase 963: {\n\t\t\t\t// column, n\n\t\t\t\treturn out.charCodeAt(5) === 110 ? webkit + out + out : out\n\t\t\t}\n\t\t\t// box-decoration-break, b, o, x\n\t\t\tcase 1009: {\n\t\t\t\tif (out.charCodeAt(4) !== 100) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t// mask, m, a, s\n\t\t\t// clip-path, c, l, i\n\t\t\tcase 969:\n\t\t\tcase 942: {\n\t\t\t\treturn webkit + out + out\n\t\t\t}\n\t\t\t// appearance: a, p, p\n\t\t\tcase 978: {\n\t\t\t\treturn webkit + out + moz + out + out\n\t\t\t}\n\t\t\t// hyphens: h, y, p\n\t\t\t// user-select: u, s, e\n\t\t\tcase 1019:\n\t\t\tcase 983: {\n\t\t\t\treturn webkit + out + moz + out + ms + out + out\n\t\t\t}\n\t\t\t// background/backface-visibility, b, a, c\n\t\t\tcase 883: {\n\t\t\t\t// backface-visibility, -\n\t\t\t\tif (out.charCodeAt(8) === DASH) {\n\t\t\t\t\treturn webkit + out + out\n\t\t\t\t}\n\n\t\t\t\t// image-set(...)\n\t\t\t\tif (out.indexOf('image-set(', 11) > 0) {\n\t\t\t\t\treturn out.replace(imgsrcptn, '$1'+webkit+'$2') + out\n\t\t\t\t}\n\n\t\t\t\treturn out\n\t\t\t}\n\t\t\t// flex: f, l, e\n\t\t\tcase 932: {\n\t\t\t\tif (out.charCodeAt(4) === DASH) {\n\t\t\t\t\tswitch (out.charCodeAt(5)) {\n\t\t\t\t\t\t// flex-grow, g\n\t\t\t\t\t\tcase 103: {\n\t\t\t\t\t\t\treturn webkit + 'box-' + out.replace('-grow', '') + webkit + out + ms + out.replace('grow', 'positive') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// flex-shrink, s\n\t\t\t\t\t\tcase 115: {\n\t\t\t\t\t\t\treturn webkit + out + ms + out.replace('shrink', 'negative') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// flex-basis, b\n\t\t\t\t\t\tcase 98: {\n\t\t\t\t\t\t\treturn webkit + out + ms + out.replace('basis', 'preferred-size') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn webkit + out + ms + out + out\n\t\t\t}\n\t\t\t// order: o, r, d\n\t\t\tcase 964: {\n\t\t\t\treturn webkit + out + ms + 'flex' + '-' + out + out\n\t\t\t}\n\t\t\t// justify-items/justify-content, j, u, s\n\t\t\tcase 1023: {\n\t\t\t\t// justify-content, c\n\t\t\t\tif (out.charCodeAt(8) !== 99) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\n\t\t\t\tcache = out.substring(out.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify')\n\t\t\t\treturn webkit + 'box-pack' + cache + webkit + out + ms + 'flex-pack' + cache + out\n\t\t\t}\n\t\t\t// cursor, c, u, r\n\t\t\tcase 1005: {\n\t\t\t\treturn cursorptn.test(out) ? out.replace(colonptn, ':' + webkit) + out.replace(colonptn, ':' + moz) + out : out\n\t\t\t}\n\t\t\t// writing-mode, w, r, i\n\t\t\tcase 1000: {\n\t\t\t\tcache = out.substring(13).trim()\n\t\t\t\tindex = cache.indexOf('-') + 1\n\n\t\t\t\tswitch (cache.charCodeAt(0)+cache.charCodeAt(index)) {\n\t\t\t\t\t// vertical-lr\n\t\t\t\t\tcase 226: {\n\t\t\t\t\t\tcache = out.replace(writingptn, 'tb')\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// vertical-rl\n\t\t\t\t\tcase 232: {\n\t\t\t\t\t\tcache = out.replace(writingptn, 'tb-rl')\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// horizontal-tb\n\t\t\t\t\tcase 220: {\n\t\t\t\t\t\tcache = out.replace(writingptn, 'lr')\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\treturn out\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn webkit + out + ms + cache + out\n\t\t\t}\n\t\t\t// position: sticky\n\t\t\tcase 1017: {\n\t\t\t\tif (out.indexOf('sticky', 9) === -1) {\n\t\t\t\t\treturn out\n\t\t\t\t}\n\t\t\t}\n\t\t\t// display(flex/inline-flex/inline-box): d, i, s\n\t\t\tcase 975: {\n\t\t\t\tindex = (out = input).length - 10\n\t\t\t\tcache = (out.charCodeAt(index) === 33 ? out.substring(0, index) : out).substring(input.indexOf(':', 7) + 1).trim()\n\n\t\t\t\tswitch (hash = cache.charCodeAt(0) + (cache.charCodeAt(7)|0)) {\n\t\t\t\t\t// inline-\n\t\t\t\t\tcase 203: {\n\t\t\t\t\t\t// inline-box\n\t\t\t\t\t\tif (cache.charCodeAt(8) < 111) {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// inline-box/sticky\n\t\t\t\t\tcase 115: {\n\t\t\t\t\t\tout = out.replace(cache, webkit+cache)+';'+out\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t// inline-flex\n\t\t\t\t\t// flex\n\t\t\t\t\tcase 207:\n\t\t\t\t\tcase 102: {\n\t\t\t\t\t\tout = (\n\t\t\t\t\t\t\tout.replace(cache, webkit+(hash > 102 ? 'inline-' : '')+'box')+';'+\n\t\t\t\t\t\t\tout.replace(cache, webkit+cache)+';'+\n\t\t\t\t\t\t\tout.replace(cache, ms+cache+'box')+';'+\n\t\t\t\t\t\t\tout\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn out + ';'\n\t\t\t}\n\t\t\t// align-items, align-center, align-self: a, l, i, -\n\t\t\tcase 938: {\n\t\t\t\tif (out.charCodeAt(5) === DASH) {\n\t\t\t\t\tswitch (out.charCodeAt(6)) {\n\t\t\t\t\t\t// align-items, i\n\t\t\t\t\t\tcase 105: {\n\t\t\t\t\t\t\tcache = out.replace('-items', '')\n\t\t\t\t\t\t\treturn webkit + out + webkit + 'box-' + cache + ms + 'flex-' + cache + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// align-self, s\n\t\t\t\t\t\tcase 115: {\n\t\t\t\t\t\t\treturn webkit + out + ms + 'flex-item-' + out.replace(selfptn, '') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// align-content\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\treturn webkit + out + ms + 'flex-line-pack' + out.replace('align-content', '').replace(selfptn, '') + out\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// min/max\n\t\t\tcase 973:\n\t\t\tcase 989: {\n\t\t\t\t// min-/max- height/width/block-size/inline-size\n\t\t\t\tif (out.charCodeAt(3) !== DASH || out.charCodeAt(4) === 122) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t// height/width: min-content / width: max-content\n\t\t\tcase 931:\n\t\t\tcase 953: {\n\t\t\t\tif (dimensionptn.test(input) === true) {\n\t\t\t\t\t// stretch\n\t\t\t\t\tif ((cache = input.substring(input.indexOf(':') + 1)).charCodeAt(0) === 115)\n\t\t\t\t\t\treturn property(input.replace('stretch', 'fill-available'), first, second, third).replace(':fill-available', ':stretch')\n\t\t\t\t\telse\n\t\t\t\t\t\treturn out.replace(cache, webkit + cache) + out.replace(cache, moz + cache.replace('fill-', '')) + out\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// transform, transition: t, r, a\n\t\t\tcase 962: {\n\t\t\t\tout = webkit + out + (out.charCodeAt(5) === 102 ? ms + out : '') + out\n\n\t\t\t\t// transitions\n\t\t\t\tif (second + third === 211 && out.charCodeAt(13) === 105 && out.indexOf('transform', 10) > 0) {\n\t\t\t\t\treturn out.substring(0, out.indexOf(';', 27) + 1).replace(transformptn, '$1' + webkit + '$2') + out\n\t\t\t\t}\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\treturn out\n\t}\n\n\t/**\n\t * Vendor\n\t *\n\t * @param {string} content\n\t * @param {number} context\n\t * @return {boolean}\n\t */\n\tfunction vendor (content, context) {\n\t\tvar index = content.indexOf(context === 1 ? ':' : '{')\n\t\tvar key = content.substring(0, context !== 3 ? index : 10)\n\t\tvar value = content.substring(index + 1, content.length - 1)\n\n\t\treturn should(context !== 2 ? key : key.replace(pseudofmt, '$1'), value, context)\n\t}\n\n\t/**\n\t * Supports\n\t *\n\t * @param {string} match\n\t * @param {string} group\n\t * @return {string}\n\t */\n\tfunction supports (match, group) {\n\t\tvar out = property(group, group.charCodeAt(0), group.charCodeAt(1), group.charCodeAt(2))\n\n\t\treturn out !== group+';' ? out.replace(propertyptn, ' or ($1)').substring(4) : '('+group+')'\n\t}\n\n\t/**\n\t * Animation\n\t *\n\t * @param {string} input\n\t * @return {string}\n\t */\n\tfunction animation (input) {\n\t\tvar length = input.length\n\t\tvar index = input.indexOf(':', 9) + 1\n\t\tvar declare = input.substring(0, index).trim()\n\t\tvar out = input.substring(index, length-1).trim()\n\n\t\tswitch (input.charCodeAt(9)*keyed) {\n\t\t\tcase 0: {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// animation-*, -\n\t\t\tcase DASH: {\n\t\t\t\t// animation-name, n\n\t\t\t\tif (input.charCodeAt(10) !== 110) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\t// animation/animation-name\n\t\t\tdefault: {\n\t\t\t\t// split in case of multiple animations\n\t\t\t\tvar list = out.split((out = '', animationptn))\n\n\t\t\t\tfor (var i = 0, index = 0, length = list.length; i < length; index = 0, ++i) {\n\t\t\t\t\tvar value = list[i]\n\t\t\t\t\tvar items = value.split(propertiesptn)\n\n\t\t\t\t\twhile (value = items[index]) {\n\t\t\t\t\t\tvar peak = value.charCodeAt(0)\n\n\t\t\t\t\t\tif (keyed === 1 && (\n\t\t\t\t\t\t\t// letters\n\t\t\t\t\t\t\t(peak > AT && peak < 90) || (peak > 96 && peak < 123) || peak === UNDERSCORE ||\n\t\t\t\t\t\t\t// dash but not in sequence i.e --\n\t\t\t\t\t\t\t(peak === DASH && value.charCodeAt(1) !== DASH)\n\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t// not a number/function\n\t\t\t\t\t\t\tswitch (isNaN(parseFloat(value)) + (value.indexOf('(') !== -1)) {\n\t\t\t\t\t\t\t\tcase 1: {\n\t\t\t\t\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\t\t\t\t\t// not a valid reserved keyword\n\t\t\t\t\t\t\t\t\t\tcase 'infinite': case 'alternate': case 'backwards': case 'running':\n\t\t\t\t\t\t\t\t\t\tcase 'normal': case 'forwards': case 'both': case 'none': case 'linear':\n\t\t\t\t\t\t\t\t\t\tcase 'ease': case 'ease-in': case 'ease-out': case 'ease-in-out':\n\t\t\t\t\t\t\t\t\t\tcase 'paused': case 'reverse': case 'alternate-reverse': case 'inherit':\n\t\t\t\t\t\t\t\t\t\tcase 'initial': case 'unset': case 'step-start': case 'step-end': {\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\t\t\t\tvalue += key\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\titems[index++] = value\n\t\t\t\t\t}\n\n\t\t\t\t\tout += (i === 0 ? '' : ',') + items.join(' ')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tout = declare + out + ';'\n\n\t\tif (prefix === 1 || (prefix === 2 && vendor(out, 1)))\n\t\t\treturn webkit + out + out\n\n\t\treturn out\n\t}\n\n\t/**\n\t * Isolate\n\t *\n\t * @param {Array<string>} current\n\t */\n\tfunction isolate (current) {\n\t\tfor (var i = 0, length = current.length, selector = Array(length), padding, element; i < length; ++i) {\n\t\t\t// split individual elements in a selector i.e h1 h2 === [h1, h2]\n\t\t\tvar elements = current[i].split(elementptn)\n\t\t\tvar out = ''\n\n\t\t\tfor (var j = 0, size = 0, tail = 0, code = 0, l = elements.length; j < l; ++j) {\n\t\t\t\t// empty element\n\t\t\t\tif ((size = (element = elements[j]).length) === 0 && l > 1) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\ttail = out.charCodeAt(out.length-1)\n\t\t\t\tcode = element.charCodeAt(0)\n\t\t\t\tpadding = ''\n\n\t\t\t\tif (j !== 0) {\n\t\t\t\t\t// determine if we need padding\n\t\t\t\t\tswitch (tail) {\n\t\t\t\t\t\tcase STAR:\n\t\t\t\t\t\tcase TILDE:\n\t\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\t\tcase PLUS:\n\t\t\t\t\t\tcase SPACE:\n\t\t\t\t\t\tcase OPENPARENTHESES:  {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tpadding = ' '\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tswitch (code) {\n\t\t\t\t\tcase AND: {\n\t\t\t\t\t\telement = padding + nscopealt\n\t\t\t\t\t}\n\t\t\t\t\tcase TILDE:\n\t\t\t\t\tcase GREATERTHAN:\n\t\t\t\t\tcase PLUS:\n\t\t\t\t\tcase SPACE:\n\t\t\t\t\tcase CLOSEPARENTHESES:\n\t\t\t\t\tcase OPENPARENTHESES: {\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase OPENBRACKET: {\n\t\t\t\t\t\telement = padding + element + nscopealt\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase COLON: {\n\t\t\t\t\t\tswitch (element.charCodeAt(1)*2 + element.charCodeAt(2)*3) {\n\t\t\t\t\t\t\t// :global\n\t\t\t\t\t\t\tcase 530: {\n\t\t\t\t\t\t\t\tif (escape > 0) {\n\t\t\t\t\t\t\t\t\telement = padding + element.substring(8, size - 1)\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// :hover, :nth-child(), ...\n\t\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\t\tif (j < 1 || elements[j-1].length < 1) {\n\t\t\t\t\t\t\t\t\telement = padding + nscopealt + element\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase COMMA: {\n\t\t\t\t\t\tpadding = ''\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tif (size > 1 && element.indexOf(':') > 0) {\n\t\t\t\t\t\t\telement = padding + element.replace(pseudoptn, '$1' + nscopealt + '$2')\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telement = padding + element + nscopealt\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tout += element\n\t\t\t}\n\n\t\t\tselector[i] = out.replace(formatptn, '').trim()\n\t\t}\n\n\t\treturn selector\n\t}\n\n\t/**\n\t * Proxy\n\t *\n\t * @param {number} context\n\t * @param {string} content\n\t * @param {Array<string>} selectors\n\t * @param {Array<string>} parents\n\t * @param {number} line\n\t * @param {number} column\n\t * @param {number} length\n\t * @param {number} id\n\t * @param {number} depth\n\t * @param {number} at\n\t * @return {(string|void|*)}\n\t */\n\tfunction proxy (context, content, selectors, parents, line, column, length, id, depth, at) {\n\t\tfor (var i = 0, out = content, next; i < plugged; ++i) {\n\t\t\tswitch (next = plugins[i].call(stylis, context, out, selectors, parents, line, column, length, id, depth, at)) {\n\t\t\t\tcase void 0:\n\t\t\t\tcase false:\n\t\t\t\tcase true:\n\t\t\t\tcase null: {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\tout = next\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (out !== content) {\n\t\t  return out\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} code\n\t * @param {number} index\n\t * @param {number} length\n\t * @param {string} body\n\t * @return {number}\n\t */\n\tfunction delimited (code, index, length, body) {\n\t\tfor (var i = index + 1; i < length; ++i) {\n\t\t\tswitch (body.charCodeAt(i)) {\n\t\t\t\t// /*\n\t\t\t\tcase FOWARDSLASH: {\n\t\t\t\t\tif (code === STAR) {\n\t\t\t\t\t\tif (body.charCodeAt(i - 1) === STAR &&  index + 2 !== i) {\n\t\t\t\t\t\t\treturn i + 1\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\t// //\n\t\t\t\tcase NEWLINE: {\n\t\t\t\t\tif (code === FOWARDSLASH) {\n\t\t\t\t\t\treturn i + 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn i\n\t}\n\n\t/**\n\t * @param {number} type\n\t * @param {number} index\n\t * @param {number} length\n\t * @param {number} find\n\t * @param {string} body\n\t * @return {number}\n\t */\n\tfunction match (type, index, length, body) {\n\t\tfor (var i = index + 1; i < length; ++i) {\n\t\t\tswitch (body.charCodeAt(i)) {\n\t\t\t\tcase type: {\n\t\t\t\t\treturn i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn i\n\t}\n\n\t/**\n\t * Minify\n\t *\n\t * @param {(string|*)} output\n\t * @return {string}\n\t */\n\tfunction minify (output) {\n\t\treturn output\n\t\t\t.replace(formatptn, '')\n\t\t\t.replace(beforeptn, '')\n\t\t\t.replace(afterptn, '$1')\n\t\t\t.replace(tailptn, '$1')\n\t\t\t.replace(whiteptn, ' ')\n\t}\n\n\t/**\n\t * Use\n\t *\n\t * @param {(Array<function(...?)>|function(...?)|number|void)?} plugin\n\t */\n\tfunction use (plugin) {\n\t\tswitch (plugin) {\n\t\t\tcase void 0:\n\t\t\tcase null: {\n\t\t\t\tplugged = plugins.length = 0\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tif (typeof plugin === 'function') {\n\t\t\t\t\tplugins[plugged++] = plugin\n\t\t\t\t}\telse if (typeof plugin === 'object') {\n\t\t\t\t\tfor (var i = 0, length = plugin.length; i < length; ++i) {\n\t\t\t\t\t\tuse(plugin[i])\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tunkwn = !!plugin|0\n\t\t\t\t}\n\t\t\t}\n \t\t}\n\n \t\treturn use\n\t}\n\n\t/**\n\t * Set\n\t *\n\t * @param {*} options\n\t */\n\tfunction set (options) {\n\t\tfor (var name in options) {\n\t\t\tvar value = options[name]\n\t\t\tswitch (name) {\n\t\t\t\tcase 'keyframe': keyed = value|0; break\n\t\t\t\tcase 'global': escape = value|0; break\n\t\t\t\tcase 'cascade': cascade = value|0; break\n\t\t\t\tcase 'compress': compress = value|0; break\n\t\t\t\tcase 'semicolon': semicolon = value|0; break\n\t\t\t\tcase 'preserve': preserve = value|0; break\n\t\t\t\tcase 'prefix':\n\t\t\t\t\tshould = null\n\n\t\t\t\t\tif (!value) {\n\t\t\t\t\t\tprefix = 0\n\t\t\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\t\t\tprefix = 1\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprefix = 2\n\t\t\t\t\t\tshould = value\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn set\n\t}\n\n\t/**\n\t * Stylis\n\t *\n\t * @param {string} selector\n\t * @param {string} input\n\t * @return {*}\n\t */\n\tfunction stylis (selector, input) {\n\t\tif (this !== void 0 && this.constructor === stylis) {\n\t\t\treturn factory(selector)\n\t\t}\n\n\t\t// setup\n\t\tvar ns = selector\n\t\tvar code = ns.charCodeAt(0)\n\n\t\t// trim leading whitespace\n\t\tif (code < 33) {\n\t\t\tcode = (ns = ns.trim()).charCodeAt(0)\n\t\t}\n\n\t\t// keyframe/animation namespace\n\t\tif (keyed > 0) {\n\t\t\tkey = ns.replace(invalidptn, code === OPENBRACKET ? '' : '-')\n\t\t}\n\n\t\t// reset, used to assert if a plugin is moneky-patching the return value\n\t\tcode = 1\n\n\t\t// cascade/isolate\n\t\tif (cascade === 1) {\n\t\t\tnscope = ns\n\t\t} else {\n\t\t\tnscopealt = ns\n\t\t}\n\n\t\tvar selectors = [nscope]\n\t\tvar result\n\n\t\t// execute plugins, pre-process context\n\t\tif (plugged > 0) {\n\t\t\tresult = proxy(PREPS, input, selectors, selectors, line, column, 0, 0, 0, 0)\n\n\t\t\tif (result !== void 0 && typeof result === 'string') {\n\t\t\t\tinput = result\n\t\t\t}\n\t\t}\n\n\t\t// build\n\t\tvar output = compile(array, selectors, input, 0, 0)\n\n\t\t// execute plugins, post-process context\n\t\tif (plugged > 0) {\n\t\t\tresult = proxy(POSTS, output, selectors, selectors, line, column, output.length, 0, 0, 0)\n\n\t\t\t// bypass minification\n\t\t\tif (result !== void 0 && typeof(output = result) !== 'string') {\n\t\t\t\tcode = 0\n\t\t\t}\n\t\t}\n\n\t\t// reset\n\t\tkey = ''\n\t\tnscope = ''\n\t\tnscopealt = ''\n\t\tpattern = 0\n\t\tline = 1\n\t\tcolumn = 1\n\n\t\treturn compress*code === 0 ? output : minify(output)\n\t}\n\n\tstylis['use'] = use\n\tstylis['set'] = set\n\n\tif (options !== void 0) {\n\t\tset(options)\n\t}\n\n\treturn stylis\n}));\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport Stylis from \"stylis\";\n\nimport { AnyRules, StylesheetPartial } from \"./stylesheet\";\n\nconst CLASS_NAME_PREFIX = \"ms__\";\n\nconst DEBUG = process.env.DEBUG === \"true\";\n\nfunction isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === \"function\";\n}\n\nexport const parseRule = <T>(\n  strings: TemplateStringsArray,\n  args?: T[],\n  props?: any\n): string =>\n  strings\n    .reduce((rule: string[], part: string, index: number) => {\n      rule.push(part);\n\n      const arg = args?.[index];\n      const value = arg && isFunction(arg) ? arg(props) : arg;\n\n      if (value) {\n        rule.push(value);\n      }\n\n      return rule;\n    }, [])\n    .join(\"\");\n\n// Use a fixed class prefix to simplify client/server class names\nexport const generateClassName = (hash: string): string =>\n  `${CLASS_NAME_PREFIX}${hash}`;\n\nexport const updateSheetRule = (\n  sheet: StylesheetPartial<CSSRuleList | AnyRules>,\n  className: string,\n  rule: string\n) => {\n  const DEBUG_RULES: string[] = [];\n\n  const selectorText = `.${className}`;\n\n  const stylis = new Stylis({\n    global: false,\n  });\n\n  // See https://github.com/thysultan/stylis.js#plugins for plugin details\n  stylis.use((context, content, selectors, parent) => {\n    const selector = selectors[0];\n    if (selector) {\n      // Remove any additional specificity...\n      // TODO: a bit hacky... can likely be improved/made more robust. this is intended to ensure child blocks are not inserted without the parent wrapper (e.g. @media rules)\n      const normalizedSelector = `${parent[0] || \"\"}${\n        (parent[0] &&\n          selector.toString().replace(new RegExp(parent[0], \"g\"), \"\")) ||\n        \"\"\n      }`;\n\n      // Do not include any global styles... Should be handled... globally! 2 = selector block, 3 = @at-rule block\n      if (\n        ((context === 2 && selector.startsWith(selectorText)) ||\n          context === 3) &&\n        normalizedSelector !== parent[0] &&\n        selector.toLowerCase().indexOf(\":global\") === -1\n      ) {\n        // Add class postfix to localise animation name if required\n        const currentSelector = `${selector}${\n          (selector.toLowerCase().startsWith(\"@keyframes \") &&\n            `-${className}`) ||\n          \"\"\n        }`;\n        // Set the correct content if font-face\n        const currentContent =\n          (selector.toLowerCase().startsWith(\"@font-face\") &&\n            content.substr(1, content.length - 2)) ||\n          content;\n\n        sheet.insertRule(`${currentSelector} {${currentContent}}`);\n\n        if (DEBUG) {\n          DEBUG_RULES.push(`${currentSelector} {\\n    ${content}\\n  }`);\n        }\n      }\n    }\n  });\n\n  stylis(selectorText, rule);\n\n  if (DEBUG) {\n    console.log(\n      `UPDATE(${sheet.rules.length} rules)\\n `,\n      DEBUG_RULES.join(\"\\n  \")\n    );\n  }\n\n  return className;\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nconst charsLength = 52;\n\nconst getAlphabeticChar = (code: number): string =>\n  String.fromCharCode(code + (code > 25 ? 39 : 97));\n\nconst generateAlphabeticName = (code: number): string => {\n  let name = \"\";\n  let x;\n\n  /* get a char and divide by alphabet-length */\n  for (x = code; x > charsLength; x = Math.floor(x / charsLength)) {\n    name = getAlphabeticChar(x % charsLength) + name;\n  }\n\n  return getAlphabeticChar(x % charsLength) + name;\n};\n\n// Source: https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js\nconst murmurhash = (c: string): number => {\n  let a;\n  let e;\n  let b;\n  let d;\n  for (e = c.length | 0, a = e | 0, d = 0, b; e >= 4; ) {\n    (b =\n      (c.charCodeAt(d) & 255) |\n      ((c.charCodeAt(++d) & 255) << 8) |\n      ((c.charCodeAt(++d) & 255) << 16) |\n      ((c.charCodeAt(++d) & 255) << 24)),\n      (b =\n        1540483477 * (b & 65535) + (((1540483477 * (b >>> 16)) & 65535) << 16)),\n      (b ^= b >>> 24),\n      (b =\n        1540483477 * (b & 65535) + (((1540483477 * (b >>> 16)) & 65535) << 16)),\n      (a =\n        (1540483477 * (a & 65535) +\n          (((1540483477 * (a >>> 16)) & 65535) << 16)) ^\n        b),\n      (e -= 4),\n      ++d;\n  }\n  switch (e) {\n    case 3:\n      a ^= (c.charCodeAt(d + 2) & 255) << 16;\n      break;\n    case 2:\n      a ^= (c.charCodeAt(d + 1) & 255) << 8;\n      break;\n    case 1:\n      (a ^= c.charCodeAt(d) & 255),\n        (a =\n          1540483477 * (a & 65535) +\n          (((1540483477 * (a >>> 16)) & 65535) << 16));\n      break;\n  }\n  a ^= a >>> 13;\n  a = 1540483477 * (a & 65535) + (((1540483477 * (a >>> 16)) & 65535) << 16);\n  return (a ^ (a >>> 15)) >>> 0;\n};\n\nexport const createHash = (s: string): string =>\n  generateAlphabeticName(murmurhash(s));\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nexport type CSSRule = {\n  cssText: string;\n  selectorText: string;\n};\n\nexport type OtherRule = {\n  cssText: string;\n  cssRules?: CSSRule[];\n};\n\nexport type AnyRule = CSSRule | OtherRule;\nexport type AnyRules = AnyRule[];\n\nexport interface StylesheetPartial<T> {\n  rules: T;\n  deleteRule: (index: number) => void;\n  insertRule: (cssText: string, index?: number) => number;\n}\n\nexport interface ClientServerStylesheet<T> {\n  hashes: string[];\n  collectHash: (hash: string) => number;\n  sheet: StylesheetPartial<T>;\n}\n\n// export const StyleContext = React.createContext<ClientServerStylesheet<AnyRules> | undefined>(undefined);\n\nconst AnyRule = (cssText: string): AnyRule => {\n  if (cssText.substr(0, 1) === \"@\") {\n    const match = cssText.match(/.*?\\{(?<selectorText>.*)/);\n\n    return {\n      cssText,\n      cssRules: match?.groups?.selectorText\n        .slice(0, -1)\n        .split(\"}\")\n        .map((rule) => rule && AnyRule(`${rule}}`))\n        .filter((rule) => rule),\n    } as OtherRule;\n  }\n  const match = cssText.match(/(?<selectorText>.*?)\\{/);\n\n  const selectorText =\n    match && match.groups && match.groups.selectorText.trim();\n\n  return {\n    cssText,\n    selectorText,\n  } as CSSRule;\n};\n\n// @TODO: uncomment for server support\n// const StylesheetPartial = (): StylesheetPartial<AnyRules> => {\n//   const rules: AnyRules = [];\n//\n//   const deleteRule = (index: number) => {\n//     rules.splice(index, 1);\n//   };\n//\n//   const insertRule = (cssText: string, index?: number) => {\n//     rules.splice(index || rules.length - 1, 0, AnyRule(cssText));\n//     return index || rules.length - 1;\n//   };\n//\n//   return {\n//     rules,\n//     deleteRule,\n//     insertRule,\n//   };\n// };\n\n// @TODO: uncomment for server support\n// export const ServerStylesheet = (): ClientServerStylesheet<AnyRules> => {\n//   const hashes: string[] = [];\n//\n//   const collectHash = (hash: string) => hashes.push(hash);\n//\n//   return {\n//     sheet: StylesheetPartial(),\n//     hashes,\n//     collectHash,\n//   };\n// };\n\nconst ClientStylesheet = (\n  sheet: StylesheetPartial<CSSRuleList>,\n  hashes: string[] = []\n): ClientServerStylesheet<CSSRuleList> => {\n  const collectHash = (hash: string) => hashes.push(hash);\n\n  return {\n    sheet,\n    hashes,\n    collectHash,\n  };\n};\n\nexport const createStylesheet = ():\n  | ClientServerStylesheet<CSSRuleList>\n  | undefined => {\n  if (typeof document !== \"undefined\") {\n    const myStyles = document.querySelectorAll<HTMLStyleElement>(\n      \"style[data-my-styled]\"\n    );\n\n    if (myStyles.length > 0) {\n      const hashes = Array.prototype.slice\n        .call(myStyles)\n        .reduce((hash, style) => {\n          const styleHashes = style.getAttribute(\"data-my-styled\");\n          if (styleHashes) {\n            return hash.concat(styleHashes.split(\" \"));\n          }\n          return hash;\n        }, []);\n\n      myStyles.forEach((style) => {\n        if (\n          !style.parentElement ||\n          style.parentElement.tagName.toUpperCase() !== \"HEAD\"\n        ) {\n          document.getElementsByTagName(\"head\")[0].appendChild(style);\n        }\n      });\n\n      const { sheet } = myStyles[myStyles.length - 1];\n\n      if (sheet) {\n        return ClientStylesheet(sheet, hashes);\n      }\n    }\n\n    const style = document.createElement(\"style\");\n    style.setAttribute(\"data-my-styled\", \"\");\n\n    // WebKit hack :(\n    style.appendChild(document.createTextNode(\"\"));\n\n    document.head.appendChild(style);\n\n    return ClientStylesheet(style.sheet as CSSStyleSheet);\n  }\n\n  return undefined;\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { generateClassName, parseRule, updateSheetRule } from \"./utils\";\nimport { createHash } from \"./hash\";\nimport { createStylesheet } from \"./stylesheet\";\n\nexport const globalStylesheet = createStylesheet();\n\nexport type MyStyledTemplate<P> =\n  | {\n      (props: P): string | boolean | number;\n    }\n  | string\n  | boolean\n  | number;\n\nexport const cssWithProps = <P>(\n  props?: P,\n  prevClassName?: string,\n  stylesheet = globalStylesheet\n) => (strings: TemplateStringsArray, ...args: MyStyledTemplate<P>[]) => {\n  if (stylesheet) {\n    const rule =\n      (args.length === 0 && strings.join(\"\")) ||\n      parseRule(strings, args, props);\n    const hash = createHash(rule);\n    const className = generateClassName(hash);\n\n    if (\n      className === prevClassName ||\n      (stylesheet.hashes && stylesheet.hashes.indexOf(hash) !== -1)\n    ) {\n      return className;\n    }\n\n    stylesheet.collectHash(hash);\n\n    return updateSheetRule(stylesheet.sheet, className, rule);\n  }\n\n  return \"\";\n};\n\nexport const css = <P>(\n  strings: TemplateStringsArray,\n  ...args: MyStyledTemplate<P>[]\n) => cssWithProps<P>()(strings, ...args);\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport { Children, createElement, FC } from \"packages/render\";\n\nimport { cssWithProps, MyStyledTemplate } from \"./css\";\n\nexport interface MyStyledComponentProps {\n  className?: string;\n  children?: Children;\n}\n\nexport type MyStyledComponent<\n  P extends keyof JSX.IntrinsicElements | FC<P> | MyStyledComponentProps\n> = FC<P> | keyof JSX.IntrinsicElements;\n\nexport interface MyStyled<P, T> {\n  (string: TemplateStringsArray, ...args: T[]): MyStyledComponent<P>;\n}\n\ntype ComponentProps<P> = Omit<P, \"className\">;\n\nexport const myStyled = <P, O = ComponentProps<P>>(\n  Component: MyStyledComponent<P>\n): MyStyled<O, MyStyledTemplate<O>> => (strings, ...args) => ({\n  children,\n  className,\n  ...props\n}: MyStyledComponentProps) => {\n  // @TODO keep track of previous class name...\n  // const prevClassName = useRef<string>(\"\");\n  // prevClassName.current = css<P>(props as P, prevClassName.current)(strings, ...args);\n\n  const templateClassName = cssWithProps(props as O)(strings, ...args);\n\n  return createElement(\n    Component,\n    { ...props, className: [className, templateClassName].join(\" \") },\n    children\n  );\n};\n\n// @TODO: type this...!\n// const domElements = [\n//     'a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr',\n//\n//     // SVG\n//     'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'marker', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'\n// ];\n//\n// domElements.forEach(element => {\n//     myStyled[element] = myStyled(element);\n// });\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nexport { myStyled as default } from \"./myStyled\";\n\nexport { css, cssWithProps } from \"./css\";\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n\nimport { jsx } from \"packages/render\";\nimport myStyled from \"packages/myStyled\";\n\nimport AvatarImage from \"./assets/mjd.png\";\n\n// Quick fix to allow stylelint to do it's thing:\nconst styled = myStyled;\n\nconst Avatar$ = styled(\"aside\")`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  font-weight: 200;\n\n  a {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n  }\n\n  a,\n  a:hover {\n    color: inherit;\n    text-decoration: none;\n  }\n\n  h2 {\n    display: flex;\n    font-weight: lighter;\n    font-size: 2rem;\n    margin: 0;\n    padding: 0;\n    white-space: nowrap;\n    line-height: 1;\n\n    @media (min-width: 768px) {\n      font-size: 2.75rem;\n    }\n\n    &::before {\n      content: \" \";\n      background: url(${AvatarImage}) no-repeat 50% / cover #fff;\n      border-radius: 500px;\n      border: 1px solid #ccc;\n      overflow: hidden;\n      width: 1em;\n      height: 1em;\n      align-self: center;\n      flex-shrink: 0;\n      flex-grow: 0;\n      margin-right: 0.5rem;\n      opacity: 0.8;\n      display: block;\n    }\n  }\n\n  p {\n    margin: 0;\n    padding: 0;\n    white-space: nowrap;\n    font-size: 0.85rem;\n  }\n`;\n\nexport const Avatar = () => (\n  <Avatar$>\n    <a\n      href=\"https://matt-dunn.github.io/\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <h2>Matt Dunn</h2>\n\n      <p>Senior User Interface / Full Stack Developer</p>\n    </a>\n  </Avatar$>\n);\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nexport * from \"./Avatar\";\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n\nimport { jsx } from \"packages/render\";\nimport myStyled from \"packages/myStyled\";\n\nimport { Avatar } from \"../Avatar\";\n\n// Quick fix to allow stylelint to do it's thing:\nconst styled = myStyled;\n\nconst Header$ = styled(\"header\")`\n  align-items: flex-end;\n  padding: 0.5rem 0;\n  margin-bottom: 1rem;\n  border-bottom: 2px solid var(--secondary-color);\n  background-color: var(--main-bg-color);\n  z-index: 1;\n\n  > h1 {\n    flex-grow: 1;\n    align-self: center;\n    margin: 0 2rem 0.5rem 0;\n    padding: 0;\n    font-weight: 200;\n    font-size: 1.25rem;\n\n    @media (min-width: 576px) {\n      margin-bottom: 0;\n    }\n\n    @media (min-width: 768px) {\n      font-size: 1.75rem;\n    }\n  }\n\n  @media (min-width: 576px) {\n    display: flex;\n  }\n\n  @media (min-width: 768px) {\n    position: sticky;\n    top: 0;\n  }\n`;\n\nexport const Header = () => (\n  <Header$>\n    <h1>\n      Pure TypeScript implementation of styled JSX functional components and\n      state management\n    </h1>\n    <Avatar />\n  </Header$>\n);\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nexport * from \"./Header\";\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n/** @jsxFrag jsxFrag **/\n\nimport { jsx, jsxFrag } from \"packages/render\";\nimport myStyled from \"packages/myStyled\";\n\nimport { TodoItem } from \"./types\";\nimport { Actions as TodoActions } from \"./duck\";\n\ntype TodoProps = {\n  todo: TodoItem;\n  deleteTodo: TodoActions[\"deleteTodo\"];\n  updateTodo: TodoActions[\"updateTodo\"];\n};\n\n// Quick fix to allow stylelint to do it's thing:\nconst styled = myStyled;\n\nconst Todo$ = styled(\"article\")`\n  display: flex;\n  align-items: flex-start;\n\n  label {\n    flex-grow: 1;\n    margin-right: 1rem;\n    word-break: break-word;\n    display: flex;\n    align-items: baseline;\n  }\n\n  del {\n    word-break: break-word;\n    display: flex;\n    align-items: baseline;\n  }\n\n  input[type=\"checkbox\"] {\n    margin: 0 0.5rem 0 0;\n  }\n`;\n\nexport const Todo = ({\n  todo: { id, text, complete },\n  deleteTodo,\n  updateTodo,\n}: TodoProps) => (\n  <Todo$>\n    <label\n      onClick={(e) => {\n        e.preventDefault();\n        updateTodo({ id, text, complete: !complete });\n      }}\n    >\n      {complete ? (\n        <del className=\"text-muted\">\n          <input type=\"checkbox\" checked={complete} />\n          {text}\n        </del>\n      ) : (\n        <>\n          <input type=\"checkbox\" checked={complete} />\n          {text}\n        </>\n      )}\n    </label>\n    <button\n      className=\"btn btn-sm btn-outline-secondary\"\n      onClick={(e) => {\n        e.preventDefault();\n        deleteTodo(id);\n      }}\n    >\n      Delete\n    </button>\n  </Todo$>\n);\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n\nimport { jsx, Node } from \"packages/render\";\nimport myStyled from \"packages/myStyled\";\n\nimport { TodoItem, TodoItems } from \"./types\";\n\ntype TodosProps = {\n  todos: TodoItems;\n  children: (todo: TodoItem) => Node;\n};\n\n// Quick fix to allow stylelint to do it's thing:\nconst styled = myStyled;\n\nconst Todos$ = styled(\"ul\")`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst TodosItem$ = styled(\"li\")`\n  padding: 0.25rem 0;\n`;\n\nexport const Todos = ({ todos, children }: TodosProps) => (\n  <Todos$>\n    {todos.map((todo) => (\n      <TodosItem$ key={todo.id}>{children(todo)}</TodosItem$>\n    ))}\n  </Todos$>\n);\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n\nimport { jsx, useState } from \"packages/render\";\nimport myStyled from \"packages/myStyled\";\n\nimport { Actions as TodoActions } from \"./duck\";\n\ntype TodoInputProps = {\n  createTodo: TodoActions[\"createTodo\"];\n};\n\n// Quick fix to allow stylelint to do it's thing:\nconst styled = myStyled;\n\nconst TodoListForm$ = styled(\"form\")`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.75rem;\n\n  > label {\n    display: flex;\n    flex-grow: 1;\n    align-items: center;\n    margin: 0;\n  }\n\n  input[type=\"text\"] {\n    width: 100%;\n    margin: 0 0.5rem 0 0.35rem;\n  }\n`;\n\nexport const TodoInput = ({ createTodo }: TodoInputProps) => {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <TodoListForm$\n      onSubmit={(e: any) => {\n        e.preventDefault();\n        if (value.trim()) {\n          createTodo(value.trim());\n          setValue(\"\");\n        }\n      }}\n    >\n      <label>\n        Todo\n        <input\n          value={value}\n          type=\"text\"\n          placeholder=\"Add new todo\"\n          className=\"form-control\"\n          onInput={(e: any) => {\n            setValue(e.target.value);\n          }}\n        />\n      </label>\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary\"\n        disabled={!value.trim()}\n      >\n        Add\n      </button>\n    </TodoListForm$>\n  );\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n\nimport { jsx } from \"packages/render\";\nimport myStyled from \"packages/myStyled\";\n\nimport { Todos } from \"./Todos\";\nimport { TodoItems } from \"./types\";\nimport { Actions as TodoActions } from \"./duck\";\nimport { TodoInput } from \"./TodoInput\";\nimport { Todo } from \"./Todo\";\n\ntype TodoListProps = {\n  todos: TodoItems;\n  createTodo: TodoActions[\"createTodo\"];\n  deleteTodo: TodoActions[\"deleteTodo\"];\n  updateTodo: TodoActions[\"updateTodo\"];\n  className?: string;\n};\n\n// Quick fix to allow stylelint to do it's thing:\nconst styled = myStyled;\n\nconst TodoList$ = styled(\"section\")`\n  padding: 1rem;\n  width: 100%;\n  border: 1px solid var(--secondary-color);\n  border-radius: 0.25rem;\n`;\n\nconst TodoListHeader$ = styled(\"header\")`\n  border-bottom: 1px solid var(--secondary-color);\n  margin-bottom: 1rem;\n`;\n\nexport const TodoList = ({\n  todos,\n  createTodo,\n  deleteTodo,\n  updateTodo,\n  className,\n}: TodoListProps) => (\n  <TodoList$ className={className}>\n    <TodoListHeader$>\n      <TodoInput createTodo={createTodo} />\n      <p>\n        You have <strong>{todos.length}</strong> todo\n        {(todos.length !== 1 && \"s\") || \"\"}\n      </p>\n    </TodoListHeader$>\n    <main>\n      <Todos todos={todos}>\n        {(todo) => (\n          <Todo todo={todo} deleteTodo={deleteTodo} updateTodo={updateTodo} />\n        )}\n      </Todos>\n    </main>\n  </TodoList$>\n);\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nexport * from \"./Todo\";\nexport * from \"./Todos\";\nexport * from \"./TodoList\";\nexport * from \"./types\";\nexport * from \"./duck\";\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n\nimport { jsx } from \"packages/render\";\nimport { connect } from \"packages/state\";\n\nimport { AppState } from \"../store\";\n\nimport {\n  Actions as TodoActions,\n  actions as todoActions,\n  TodoItems,\n  TodoList,\n} from \"../components/Todos\";\n\ntype TodosProps = {\n  todos: TodoItems;\n  createTodo: TodoActions[\"createTodo\"];\n  deleteTodo: TodoActions[\"deleteTodo\"];\n  updateTodo: TodoActions[\"updateTodo\"];\n};\n\nconst Todos = ({ todos, createTodo, deleteTodo, updateTodo }: TodosProps) => (\n  <main className=\"d-flex flex-md-row flex-column\">\n    <TodoList\n      todos={todos}\n      createTodo={createTodo}\n      deleteTodo={deleteTodo}\n      updateTodo={updateTodo}\n      className=\"mr-md-2 mb-3 flex-grow-1 align-self-start col-md\"\n    />\n    <pre className=\"ml-md-2 flex-grow-1 col-md\">\n      {JSON.stringify(todos, undefined, 1)}\n    </pre>\n  </main>\n);\n\nconst ConnectedTodos = connect(\n  ({ todos }: AppState) => ({\n    todos,\n  }),\n  {\n    ...todoActions,\n  }\n)(Todos);\n\nexport { ConnectedTodos as Todos };\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx jsx **/\n\nimport { jsx } from \"packages/render\";\nimport { StoreProvider } from \"packages/state\";\n\nimport { getStore } from \"./store\";\n\nimport { Header } from \"./components/Header\";\nimport { Todos } from \"./containers/Todos\";\n\nconst store = getStore({\n  todos: [\n    { id: \"1\", text: \"Do something\", complete: true },\n    { id: \"2\", text: \"Do something else\", complete: false },\n  ],\n});\n\nexport const App = () => (\n  <StoreProvider store={store}>\n    <div className=\"container-lg container-main\">\n      <Header />\n      <article>\n        <header>\n          <p>Simple vanilla, dependency free implementation of:</p>\n          <ul>\n            <li>\n              <a\n                href=\"https://github.com/matt-dunn/demo-state-styled-render/tree/master/packages/render\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                JSX functional component rendering with virtual DOM and simple\n                hooks\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://github.com/matt-dunn/demo-state-styled-render/tree/master/packages/state\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Redux style state management\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://github.com/matt-dunn/demo-state-styled-render/tree/master/packages/myStyled\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                A Styled Component implementation\n              </a>\n            </li>\n          </ul>\n        </header>\n\n        <p>\n          Intended as an illustration of how the basics and internals of React /\n          Redux / Styled Components work under the hood and{\" \"}\n          <strong>not intended for production use</strong>.\n        </p>\n      </article>\n      <Todos />\n    </div>\n  </StoreProvider>\n);\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport Mx from \"packages/render\";\n\nimport { App } from \"./App\";\n\nconst el = document.createElement(\"div\");\n\ndocument.body.append(el);\n\nMx.render(App)(el);\n"]}