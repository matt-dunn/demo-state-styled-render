{"version":3,"sources":["../packages/render/index.ts","../packages/state/types.ts","../packages/state/createAction.ts","../packages/state/createReducer.ts","../packages/state/createStore.ts","../packages/state/getType.ts","../packages/state/index.ts","../src/examples/todo/Todo.tsx","../src/examples/todo/Todos.tsx","../src/examples/todo/TodoList.tsx","../src/examples/todo/duck.ts","../src/examples/todo/App.tsx","../src/examples/todo/index.ts","../src/index.ts"],"names":[],"mappings":"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","file":"src.4922515f.js","sourceRoot":"../public","sourcesContent":["/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport {Actions, Store} from \"../state\";\n\ntype AnyFunc = (...args: any[]) => any;\n\ntype Children<T = string> = Node<T>[];\n\ntype NodeBase<T = string, P = any> = {\n  type: T;\n  props: P;\n}\n\ntype Node<T = string, P = any> = {\n  children?: Children<T>;\n} & NodeBase<T, P>\n\ntype FC<P = any, N = Node> = (props: P) => N;\n\ntype NodeType<P = Record<string, unknown>> = string | FC<P, Node>;\n\ninterface HTMLElementMap extends HTMLElement{\n  [key: string]: any\n}\n\ntype Props = {\n  [key: string]: any\n};\n\nexport const h = (type: NodeType, props: Props, ...children: Node[]): Node => typeof type === \"function\" ? type({...props, children}) : {type, props, children};\n\n(global as any).h = h;\n\nconst propertyMap = (name: string) => {\n  if (name === \"className\") {\n    return \"class\";\n  } else if (/^on/.test(name)) {\n    return name.toLowerCase();\n  }\n\n  return name;\n};\n\nconst isNode = (node: any): node is Node => typeof node?.type === \"string\" && Object.prototype.hasOwnProperty.call(node, \"props\");\n\nconst setAttribute = (el: HTMLElementMap, name: string, value: string | AnyFunc) => {\n  const propertyName = propertyMap(name);\n\n  if (typeof value === \"function\") {\n    el[propertyName] = value;\n  } else {\n    if (value) {\n      el.setAttribute(propertyName, value);\n    } else {\n      el.removeAttribute(propertyName);\n    }\n    el[propertyName] = value;\n  }\n};\n\nconst setAttributes = (el: HTMLElement, props: Props) =>\n  Object.keys(props || {}).forEach(name => setAttribute(el, name, props[name]));\n\nconst removeAttribute = (el: HTMLElement, name: string) =>\n  el.removeAttribute(propertyMap(name));\n\nconst updateAttribute = (el: HTMLElement, name: string, value: string, prevValue: string) => {\n  if (value !== prevValue) {\n    if (value === undefined) {\n      removeAttribute(el, name);\n    } else if (!prevValue || value !== prevValue) {\n      setAttribute(el, name, value);\n    }\n  }\n};\n\nconst updateAttributes = (el: HTMLElement, props: Props, prevProps: Props = {}) =>\n  Object.keys({...props, ...prevProps}).forEach(name => updateAttribute(el, name, props[name], prevProps[name]));\n\nconst createElement = (node: Node): (HTMLElement | Text) => {\n  if (isNode(node)) {\n    const el = document.createElement(node.type);\n\n    setAttributes(el, node?.props);\n\n    (node.children || [])\n      .map(node => {\n        if (Array.isArray(node)) {\n          return node.map(createElement);\n        }\n        return createElement(node);\n      })\n      .forEach(element => {\n        if (Array.isArray(element)) {\n          element.forEach(el.appendChild.bind(el));\n        } else {\n          el.appendChild(element);\n        }\n      });\n\n    return el;\n  }\n\n  return document.createTextNode(node);\n};\n\nconst hasChanged = (node: Node | string, prevNode: Node | string) =>\n  typeof node !== typeof prevNode\n  || typeof node === \"string\" && node !== prevNode\n  || (isNode(node) && node.type) !== (isNode(prevNode) && prevNode.type);\n\nconst updateChildren = (el: HTMLElement, children: Children, prevChildren: Children, index: number) => {\n  const nodeChildrenLength = children.length;\n  const prevNodeChildrenLength = prevChildren.length;\n  for (let childIndex = 0; childIndex < nodeChildrenLength || childIndex < prevNodeChildrenLength; childIndex++) {\n    if (Array.isArray(children[childIndex])) {\n      updateChildren(el, children[childIndex] as unknown as Children, prevChildren[childIndex] as unknown as Children, childIndex);\n    } else {\n      updateTree(\n        el.childNodes[index] as HTMLElement,\n        children[childIndex],\n        prevChildren[childIndex],\n        childIndex\n      );\n    }\n  }\n};\n\nconst updateTree = (el: HTMLElement, node: Node, prevNode?: Node, index = 0) => {\n  if (prevNode === undefined) {\n    el.appendChild(createElement(node));\n  } else if (node === undefined) {\n    el.removeChild(el.childNodes[index]);\n  } else if (hasChanged(node, prevNode)) {\n    el.replaceChild(createElement(node), el.childNodes[index]);\n  } else if (isNode(node)) {\n    updateAttributes(\n      el.childNodes[index] as HTMLElement,\n      node.props,\n      prevNode.props\n    );\n\n    updateChildren(el, node.children || [], prevNode.children || [], index);\n  } else if (el.childNodes[index].nodeValue !== node) {\n    el.childNodes[index].nodeValue = node;\n  }\n};\n\ntype UseState = <S = Record<string, unknown>>(initialState: S) => [S, (newValue: S) => S];\n\ntype MxContainer = {\n  index: number;\n  state: any[];\n  currentState: any;\n  currentTree?: Node;\n  renderTree: () => void;\n  useState: UseState;\n  render: <S>(store: Store<S>, actions: Actions) => (component: FC) => (mountPoint: HTMLElement) => void;\n}\n\nexport const Mx: MxContainer = {\n  index: 0,\n  state: [],\n  currentState: undefined,\n  currentTree: undefined,\n  renderTree: undefined as unknown as () => void,\n  useState: <S = Record<string, unknown>>(initialState: S) => {\n    const activeIndex = Mx.index;\n\n    if (Mx.state[activeIndex] === undefined) {\n      Mx.state[activeIndex] = initialState;\n    }\n\n    const currentState = Mx.state[activeIndex];\n\n    const setter = (newValue: S) => {\n      if (Mx.state[activeIndex] !== newValue) {\n        Mx.state[activeIndex] = newValue;\n        Mx.renderTree();\n      }\n      return newValue;\n    };\n\n    Mx.index++;\n\n    return [currentState, setter];\n  },\n  render: (store, actions) => component => mountPoint => {\n    const dispatchActions = Object.entries(actions).reduce((actions, [key, action]) => ({\n      ...actions,\n      [key]: (...args: any[]) => store.dispatch(action(...args))\n    }), {});\n\n    const render = (c: Node) => {\n      updateTree(mountPoint, c, Mx.currentTree);\n\n      Mx.currentTree = c;\n    };\n\n    Mx.renderTree = () => {\n      render(component({...Mx.currentState, ...dispatchActions}));\n      Mx.index = 0;\n    };\n\n    Mx.currentState = store.getState();\n\n    store.subscribe((state) => {\n      Mx.currentState = state;\n      Mx.renderTree();\n    });\n\n    return Mx.renderTree();\n  }\n};\n\nconst useState = Mx.useState;\n\nexport {useState};\n\nexport const classnames = (...classNames: (string | undefined)[]): string => classNames.join(\" \");\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nexport const typeSymbol = Symbol(\"type\");\n\nexport type ActionPayload<P> = {\n  type: string;\n  payload: P\n}\n\nexport type StoreCallback<S> = (newState: S, state: S) => void;\n\nexport type Reducer<S, P, A extends ActionPayload<P>> = (state: S, action: A) => S;\n\nexport type Reducers<S = any, P = any, A extends ActionPayload<P> = ActionPayload<P>> = {\n  [K in keyof S]: Reducer<S[K], P, A>\n}\n\nexport type State<S> = {\n  [K in keyof S]: S[K]\n}\n\nexport type PayloadCreator<A extends any[], P> = (...args: A) => P;\n\nexport type ActionCreator<A extends any[], P> = {\n  (...args: A): ActionPayload<P>\n  [typeSymbol]: string;\n}\n\nexport type Store<S> = {\n  dispatch: <P>(action: ActionPayload<P>) => void;\n  getState: () => S;\n  subscribe: (cb: StoreCallback<S>) => void;\n  unsubscribe: (cb: StoreCallback<S>) => void;\n};\n\nexport type Actions = {\n  [key: string]: ActionCreator<any, any>\n}\n\nexport type ReducersMap<S, P = any, A extends ActionPayload<P> = ActionPayload<P>> = {\n  [key: string]: Reducer<S, P, A>\n}\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport {ActionCreator, PayloadCreator, typeSymbol} from \"./types\";\n\nexport const createAction = <A extends any[], P>(type: string, payloadCreator: PayloadCreator<A, P>): ActionCreator<A, P> => {\n  const action = (...args: A) => ({\n    type,\n    payload: payloadCreator(...args),\n  });\n\n  const typedAction = action as ActionCreator<A, P>;\n\n  typedAction[typeSymbol] = type;\n\n  return typedAction;\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport {ActionPayload, ReducersMap} from \"./types\";\n\nexport const createReducer = <S extends any, P, A extends ActionPayload<P> = ActionPayload<P>>(reducers: ReducersMap<S, P, A>) => ((state: S, action: A): S => {\n  const reducer = reducers[action.type];\n  return (reducer && reducer(state, action)) || state;\n});\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport {ActionPayload, Reducers, State, Store, StoreCallback} from \"./types\";\n\nexport const createStore = <S>(reducers: Reducers<S>) => (initialState: S): Store<S> => {\n  let state: State<S> = {...initialState};\n  let callbacks: StoreCallback<S>[] = [];\n\n  return {\n    dispatch<P>(action: ActionPayload<P>) {\n      const newState = Object.keys(reducers).reduce((currentState, key) => {\n        const updatedState = reducers[key as keyof S](currentState[key as keyof S], action);\n\n        if (updatedState !== currentState[key as keyof S]) {\n          return {\n            ...currentState,\n            [key]: updatedState\n          };\n        }\n\n        return currentState;\n      }, state);\n\n      if (newState !== state) {\n        callbacks.forEach(callback => callback(newState, state));\n        state = newState;\n      }\n    },\n    getState: () => state,\n    subscribe(cb: StoreCallback<S>) {\n      callbacks = [...callbacks, cb];\n    },\n    unsubscribe(cb: StoreCallback<S>) {\n      callbacks = callbacks.filter(callback => callback !== cb);\n    }\n  };\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport {ActionCreator, typeSymbol} from \"./types\";\n\nexport const getType = <P>(actionCreator: ActionCreator<any, P>): string => actionCreator[typeSymbol];\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nexport {Actions, Store} from \"./types\";\n\nexport * from \"./createAction\";\nexport * from \"./createReducer\";\nexport * from \"./createStore\";\nexport * from \"./getType\";\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx h **/\n\nimport {h} from \"packages/render\";\n\nimport {TodoItem} from \"./types\";\nimport {DeleteTodo, UpdateTodo} from \"./duck\";\n\ntype TodoProps = {\n  todo: TodoItem;\n  deleteTodo: DeleteTodo;\n  updateTodo: UpdateTodo\n}\n\nexport const Todo = ({todo: {id, text, complete}, deleteTodo, updateTodo}: TodoProps) =>\n  <div className=\"todos__item\">\n    <label onClick={(e) => {\n      e.preventDefault();\n      updateTodo({id, text, complete: !complete});\n    }}>\n      {complete ?\n        <del className=\"todos__item__title\">\n          <input type=\"checkbox\" checked={complete}/>\n          {text}\n        </del>\n        :\n        <span className=\"todos__item__title\">\n          <input type=\"checkbox\" checked={complete}/>\n          {text}\n        </span>\n      }\n    </label>\n    <button className=\"btn btn-sm\" onClick={(e) => {\n      e.preventDefault();\n      deleteTodo(id);\n    }}>\n      Delete\n    </button>\n  </div>;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx h **/\n\nimport {h} from \"packages/render\";\n\nimport {DeleteTodo, UpdateTodo} from \"./duck\";\nimport {TodoItems} from \"./types\";\nimport {Todo} from \"./Todo\";\n\ntype TodosProps = {\n  todos: TodoItems;\n  deleteTodo: DeleteTodo;\n  updateTodo: UpdateTodo;\n}\n\nexport const Todos = ({todos, updateTodo, deleteTodo}: TodosProps) =>\n  <ul className=\"todos__list\">\n    {todos.map(todo =>\n      <li className=\"todos__list__item\">\n        <Todo todo={todo} updateTodo={updateTodo} deleteTodo={deleteTodo}/>\n      </li>\n    )}\n  </ul>;\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx h **/\n\nimport {classnames, h, useState} from \"packages/render\";\n\nimport {Todos} from \"./Todos\";\nimport {TodoItems} from \"./types\";\nimport {CreateTodo, DeleteTodo, UpdateTodo} from \"./duck\";\n\nimport \"./main.scss\";\n\ntype TodoListProps = {\n  todos: TodoItems;\n  createTodo: CreateTodo;\n  deleteTodo: DeleteTodo;\n  updateTodo: UpdateTodo;\n  className?: string;\n}\n\nexport const TodoList = ({todos, createTodo, deleteTodo, updateTodo, className}: TodoListProps) => {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <section className={classnames(\"todos\", className)}>\n      <form onSubmit={e => {\n        e.preventDefault();\n        createTodo(value);\n        setValue(\"\");\n      }}>\n        <header className=\"todos__header\">\n          <div className=\"todos__header__value\">\n            <label>\n              Todo\n              <input value={value} type=\"text\" onInput={(e: any) => {\n                setValue(e.target.value);\n              }}/>\n            </label>\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={!value || undefined}>Add</button>\n          </div>\n          <p>You have <strong>{todos.length}</strong> todo{todos.length !== 1 && \"s\" || \"\"}</p>\n        </header>\n      </form>\n      <main>\n        <Todos todos={todos} deleteTodo={deleteTodo} updateTodo={updateTodo} />\n      </main>\n    </section>\n  );\n};\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport {createAction, createReducer, getType} from \"packages/state\";\n\nimport {TodoItem} from \"./types\";\n\nexport const createTodo = createAction(\"TODO:CREATE\", (text: string, complete?: boolean): TodoItem => ({\n  id: Date.now().toString(),\n  text,\n  complete: complete ?? false\n}));\n\nexport type CreateTodo = typeof createTodo;\n\nexport const deleteTodo = createAction(\"TODO:DELETE\", (id: string): string => id);\n\nexport type DeleteTodo = typeof deleteTodo;\n\nexport const updateTodo = createAction(\"TODO:UPDATE\", (todo: TodoItem): TodoItem => todo);\n\nexport type UpdateTodo = typeof updateTodo;\n\nexport default createReducer<TodoItem[], any>({\n  [getType(createTodo)]: (state, { payload }: ReturnType<CreateTodo>) => [...state, payload],\n  [getType(deleteTodo)]: (state, { payload }: ReturnType<DeleteTodo>) => state.filter(({id}) => id !== payload),\n  [getType(updateTodo)]: (state, { payload }: ReturnType<UpdateTodo>) => state.map(t => t.id === payload.id ? payload : t),\n});\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\n/** @jsx h **/\n\nimport {h, Mx} from \"packages/render\";\nimport {createStore} from \"packages/state\";\n\nimport {TodoList} from \"./TodoList\";\nimport {TodoItems} from \"./types\";\n\nimport todoReducers, {createTodo, CreateTodo, deleteTodo, DeleteTodo, updateTodo, UpdateTodo} from \"./duck\";\n\ntype AppState = {\n  todos: TodoItems;\n}\n\nconst initialState: AppState = {\n  todos: [\n    {id: \"1\", text: \"Do something\", complete: true},\n    {id: \"2\", text: \"Do something else\", complete: false}\n  ]\n};\n\nconst rootReducer = {\n  todos: todoReducers\n};\n\nconst store = createStore(rootReducer)(initialState);\n\ntype AppProps = {\n  todos: TodoItems;\n  createTodo: CreateTodo;\n  deleteTodo: DeleteTodo;\n  updateTodo: UpdateTodo\n}\n\nconst App = ({todos, createTodo, deleteTodo, updateTodo}: AppProps) => (\n  <div className=\"sample__app flex\">\n    <TodoList todos={todos} createTodo={createTodo} deleteTodo={deleteTodo} updateTodo={updateTodo} className=\"flex-item flex-fit\" />\n    <pre className=\"flex-item flex-grow\">\n        {JSON.stringify(todos, undefined, 1)}\n      </pre>\n  </div>\n);\n\n// ----- Render App -----\n\nconst el = document.createElement(\"div\");\n\ndocument.body.append(el);\n\nMx.render(store, {\n  createTodo,\n  deleteTodo,\n  updateTodo\n})(App)(el);\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport \"./App\";\n","/** !\n * Copyright (c) 2020, Matt Dunn\n *\n * @author Matt Dunn (https://matt-dunn.github.io/)\n * @licence MIT\n */\n\nimport \"./examples/todo\";\n"]}